<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BookmarkManager">
    <bookmark url="file://$PROJECT_DIR$/src/scripts/bio_creative_relation_extraction.clj" line="133" />
    <bookmark url="file://$PROJECT_DIR$/src/scripts/bio_creative_relation_extraction.clj" line="122" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="fd68d31a-9ca3-4dbc-9e5f-186ec0e5f744" name="Default Changelist" comment="Fixed logging model info">
      <change afterPath="$PROJECT_DIR$/.idea/codeStyles/codeStyleConfig.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/edu/ucdenver/ccp/nlp/evaluation.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ucdenver/ccp/nlp/evaluation.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/edu/ucdenver/ccp/nlp/re_model.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ucdenver/ccp/nlp/re_model.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/scripts/bio_creative_relation_extraction.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/scripts/bio_creative_relation_extraction.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hpl-util/src/cluster_tools.clj" beforeDir="false" afterPath="$PROJECT_DIR$/../hpl-util/src/cluster_tools.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hpl-util/src/linear_algebra.clj" beforeDir="false" afterPath="$PROJECT_DIR$/../hpl-util/src/linear_algebra.clj" afterDir="false" />
    </list>
    <ignored path="$PROJECT_DIR$/classes/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DatabaseView">
    <option name="SHOW_INTERMEDIATE" value="true" />
    <option name="GROUP_DATA_SOURCES" value="true" />
    <option name="GROUP_SCHEMA" value="true" />
    <option name="GROUP_CONTENTS" value="false" />
    <option name="SORT_POSITIONED" value="false" />
    <option name="SHOW_EMPTY_GROUPS" value="false" />
    <option name="AUTO_SCROLL_FROM_SOURCE" value="false" />
    <option name="HIDDEN_KINDS">
      <set />
    </option>
    <expand />
    <select />
  </component>
  <component name="DepsLocalSettings">
    <option name="availableProjects">
      <map>
        <entry>
          <key>
            <ExternalProjectPojo>
              <option name="name" value="Dep2Rel" />
              <option name="path" value="$PROJECT_DIR$" />
            </ExternalProjectPojo>
          </key>
          <value>
            <list>
              <ExternalProjectPojo>
                <option name="name" value="Dep2Rel" />
                <option name="path" value="$PROJECT_DIR$" />
              </ExternalProjectPojo>
            </list>
          </value>
        </entry>
        <entry>
          <key>
            <ExternalProjectPojo>
              <option name="name" value="Word2Vec-clj" />
              <option name="path" value="$PROJECT_DIR$/../Word2Vec-clj" />
            </ExternalProjectPojo>
          </key>
          <value>
            <list>
              <ExternalProjectPojo>
                <option name="name" value="Word2Vec-clj" />
                <option name="path" value="$PROJECT_DIR$/../Word2Vec-clj" />
              </ExternalProjectPojo>
            </list>
          </value>
        </entry>
        <entry>
          <key>
            <ExternalProjectPojo>
              <option name="name" value="hpl-util" />
              <option name="path" value="$PROJECT_DIR$/../hpl-util" />
            </ExternalProjectPojo>
          </key>
          <value>
            <list>
              <ExternalProjectPojo>
                <option name="name" value="hpl-util" />
                <option name="path" value="$PROJECT_DIR$/../hpl-util" />
              </ExternalProjectPojo>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="modificationStamps">
      <map>
        <entry key="$USER_HOME$/.clojure/deps.edn" value="0" />
        <entry key="$PROJECT_DIR$" value="4674997333000" />
        <entry key="$PROJECT_DIR$/deps.edn" value="1439845047" />
        <entry key="$PROJECT_DIR$/../Word2Vec-clj" value="4674913401000" />
        <entry key="$PROJECT_DIR$/../Word2Vec-clj/deps.edn" value="4267460366" />
        <entry key="$PROJECT_DIR$/../hpl-util" value="4670933584000" />
        <entry key="$PROJECT_DIR$/../hpl-util/deps.edn" value="819396828" />
        <entry key="/usr/local/lib/clojure/deps.edn" value="3158775704" />
      </map>
    </option>
    <option name="projectSyncType">
      <map>
        <entry key="$PROJECT_DIR$" value="RE_IMPORT" />
        <entry key="$PROJECT_DIR$/../Word2Vec-clj" value="RE_IMPORT" />
        <entry key="$PROJECT_DIR$/../hpl-util" value="RE_IMPORT" />
      </map>
    </option>
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/../Word2Vec-clj">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/../hpl-util">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="CLOJURE_DEPS">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Dep2Rel" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Dep2Rel" type="f1a62948:ProjectNode" />
                <item name="Aliases" type="d57c182a:AliasesNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Dep2Rel" type="f1a62948:ProjectNode" />
                <item name="Dep2Rel" type="2d1252cf:ModuleNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Dep2Rel" type="f1a62948:ProjectNode" />
                <item name="Dep2Rel" type="2d1252cf:ModuleNode" />
                <item name="Dependencies" type="6de06a37:ExternalSystemViewDefaultContributor$MyDependenciesNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FavoritesManager">
    <favorites_list name="Dep2Rel" />
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/scripts/bio_creative_relation_extraction.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="198">
              <caret line="106" column="28" selection-start-line="106" selection-start-column="28" selection-end-line="106" selection-end-column="28" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>pmap</find>
      <find>with-release</find>
      <find>unit-vec-sum</find>
      <find>r =</find>
      <find>Random</find>
      <find>sentence</find>
      <find>edu.ucdenver.ccp.nlp.re-model :as sentence</find>
      <find>seed</find>
      <find>dr</find>
      <find>uncomplicate</find>
      <find>cosine-</find>
      <find>subvec</find>
      <find>comb</find>
      <find>word-embedding</find>
      <find>unc</find>
      <find>context/</find>
      <find>seed-thresh</find>
      <find>:samples</find>
      <find>samples</find>
      <find>context-path-f</find>
      <find>save</find>
      <find>to-da</find>
      <find>make-co</find>
      <find>run</find>
      <find>making con</find>
      <find>|</find>
      <find>make-con</find>
      <find>re/con</find>
      <find>chem</find>
      <find>take</find>
    </findStrings>
    <replaceStrings>
      <replace>&quot;</replace>
      <replace>let-release</replace>
      <replace>vec-remove</replace>
    </replaceStrings>
  </component>
  <component name="Git.Settings">
    <option name="UPDATE_TYPE" value="REBASE" />
    <option name="PUSH_AUTO_UPDATE" value="true" />
    <option name="PUSH_UPDATE_ALL_ROOTS" value="false" />
    <option name="ROOT_SYNC" value="DONT_SYNC" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="6e27e1ded932cb991ca419ac5ffdd882e7430b2c" />
      </map>
    </option>
    <option name="RESET_MODE" value="MIXED" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/edu/ucdenver/ccp/conll.clj" />
        <option value="$PROJECT_DIR$/src/util.clj" />
        <option value="$PROJECT_DIR$/src/edu/ucdenver/ccp/clustering.clj" />
        <option value="$USER_HOME$/.clojure/deps.edn" />
        <option value="$USER_HOME$/.boot/profile.boot" />
        <option value="$PROJECT_DIR$/build.boot" />
        <option value="$PROJECT_DIR$/src/ClusterViewer.form" />
        <option value="$PROJECT_DIR$/src/scripts/examples.clj" />
        <option value="$USER_HOME$/.gitlibs/libs/github-tuh8888/hpl-utl/08d7ef3ab583522a3883e50f7142e9ca7cc8f636/src/cluster_tools.clj" />
        <option value="$USER_HOME$/.gitlibs/libs/github-tuh8888/hpl-utl/6baafa8f8309fc0aca5703bafb43362c32848ed7/src/math.clj" />
        <option value="$USER_HOME$/.gitlibs/libs/github-tuh8888/hpl-utl/6baafa8f8309fc0aca5703bafb43362c32848ed7/src/cluster_tools.clj" />
        <option value="$USER_HOME$/.gitlibs/libs/github-tuh8888/Word2Vec-clj/48c291f6cf3c251d20c1d7d9544cca8748dd2ee6/src/word2vec.clj" />
        <option value="$USER_HOME$/.gitlibs/libs/github-tuh8888/hpl-utl/742e803cecdb975b90750cc634ccc155c820b6dc/src/math.clj" />
        <option value="$USER_HOME$/.gitlibs/libs/github-tuh8888/hpl-utl/742e803cecdb975b90750cc634ccc155c820b6dc/src/cluster_tools.clj" />
        <option value="$USER_HOME$/.gitlibs/libs/github-tuh8888/hpl-utl/5ec12679e0daee9329b90d65f2a544afcbfa6f56/src/cluster_tools.clj" />
        <option value="$USER_HOME$/.gitlibs/libs/github-tuh8888/Word2Vec-clj/d0ddfda9271d11a2ba467cdb1ecacf5d2669c8b5/src/word2vec.clj" />
        <option value="$PROJECT_DIR$/../hpl-util/deps.edn" />
        <option value="$PROJECT_DIR$/src/edu/ucdenver/ccp/nlp/sentence.clj" />
        <option value="$PROJECT_DIR$/src/scripts/relation_extraction_script.clj" />
        <option value="$PROJECT_DIR$/run_on_tantor.sh" />
        <option value="$PROJECT_DIR$/src/edu/ucdenver/ccp/knowtator_clj.clj" />
        <option value="$PROJECT_DIR$/run/run_on_tantor.sh" />
        <option value="$PROJECT_DIR$/../hpl-util/linear_algebra.clj" />
        <option value="$PROJECT_DIR$/../hpl-util/src/math.clj" />
        <option value="$PROJECT_DIR$/.gitignore" />
        <option value="$PROJECT_DIR$/run/run_pitchme.sh" />
        <option value="$PROJECT_DIR$/assets/PITCHME.css" />
        <option value="$PROJECT_DIR$/assets/metrics.svg" />
        <option value="$PROJECT_DIR$/src/uncomplicate_context_alg.clj" />
        <option value="$PROJECT_DIR$/../Word2Vec-clj/deps.edn" />
        <option value="$PROJECT_DIR$/../Word2Vec-clj/src/Word2VecNotSet.clj" />
        <option value="$PROJECT_DIR$/../Word2Vec-clj/src/Word2VecNotSet.java" />
        <option value="$PROJECT_DIR$/../Word2Vec-clj/src/word2vec.clj" />
        <option value="$PROJECT_DIR$/../hpl-util/src/util.clj" />
        <option value="$PROJECT_DIR$/deps.edn" />
        <option value="$PROJECT_DIR$/PITCHME.md" />
        <option value="$PROJECT_DIR$/src/edu/ucdenver/ccp/nlp/readers.clj" />
        <option value="$PROJECT_DIR$/src/edu/ucdenver/ccp/nlp/relation_extraction.clj" />
        <option value="$PROJECT_DIR$/src/edu/ucdenver/ccp/nlp/re_model.clj" />
        <option value="$PROJECT_DIR$/../hpl-util/src/linear_algebra.clj" />
        <option value="$PROJECT_DIR$/src/scripts/bio_creative_relation_extraction.clj" />
        <option value="$PROJECT_DIR$/src/edu/ucdenver/ccp/nlp/evaluation.clj" />
        <option value="$PROJECT_DIR$/../hpl-util/src/cluster_tools.clj" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="1901" />
    <option name="y" value="470" />
    <option name="width" value="1360" />
    <option name="height" value="768" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="Dep2Rel" type="b2602c69:ProjectViewProjectNode" />
              <item name="Dep2Rel" type="72ca9032:PsiDirectoryNodeCustom" />
            </path>
            <path>
              <item name="Dep2Rel" type="b2602c69:ProjectViewProjectNode" />
              <item name="Dep2Rel" type="72ca9032:PsiDirectoryNodeCustom" />
              <item name="src" type="72ca9032:PsiDirectoryNodeCustom" />
            </path>
            <path>
              <item name="Dep2Rel" type="b2602c69:ProjectViewProjectNode" />
              <item name="Dep2Rel" type="72ca9032:PsiDirectoryNodeCustom" />
              <item name="src" type="72ca9032:PsiDirectoryNodeCustom" />
              <item name="ccp" type="72ca9032:PsiDirectoryNodeCustom" />
            </path>
            <path>
              <item name="Dep2Rel" type="b2602c69:ProjectViewProjectNode" />
              <item name="Dep2Rel" type="72ca9032:PsiDirectoryNodeCustom" />
              <item name="src" type="72ca9032:PsiDirectoryNodeCustom" />
              <item name="ccp" type="72ca9032:PsiDirectoryNodeCustom" />
              <item name="nlp" type="72ca9032:PsiDirectoryNodeCustom" />
            </path>
            <path>
              <item name="Dep2Rel" type="b2602c69:ProjectViewProjectNode" />
              <item name="Dep2Rel" type="72ca9032:PsiDirectoryNodeCustom" />
              <item name="resources" type="72ca9032:PsiDirectoryNodeCustom" />
            </path>
            <path>
              <item name="Dep2Rel" type="b2602c69:ProjectViewProjectNode" />
              <item name="hpl-util" type="72ca9032:PsiDirectoryNodeCustom" />
            </path>
            <path>
              <item name="Dep2Rel" type="b2602c69:ProjectViewProjectNode" />
              <item name="hpl-util" type="72ca9032:PsiDirectoryNodeCustom" />
              <item name="src" type="72ca9032:PsiDirectoryNodeCustom" />
            </path>
            <path>
              <item name="Dep2Rel" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scratches and Consoles" type="1a2a3e82:ScratchProjectViewPane$MyProjectNode" />
            </path>
            <path>
              <item name="Dep2Rel" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scratches and Consoles" type="1a2a3e82:ScratchProjectViewPane$MyProjectNode" />
              <item name="Scratches" type="d62648e6:ScratchProjectViewPane$MyRootNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope">
        <subPane subId="Scope 'Production'; set:Production; class com.intellij.psi.search.scope.ProjectProductionScope">
          <expand>
            <path>
              <item name="Dep2Rel" type="3d21c010:ScopeViewTreeModel$ProjectNode" />
              <item name="Dep2Rel" type="2674bda8:ScopeViewTreeModel$GroupNode" />
            </path>
            <path>
              <item name="Dep2Rel" type="3d21c010:ScopeViewTreeModel$ProjectNode" />
              <item name="Dep2Rel" type="2674bda8:ScopeViewTreeModel$GroupNode" />
              <item name="src" type="9f88c78c:ScopeViewTreeModel$FileNode" />
            </path>
            <path>
              <item name="Dep2Rel" type="3d21c010:ScopeViewTreeModel$ProjectNode" />
              <item name="Dep2Rel" type="2674bda8:ScopeViewTreeModel$GroupNode" />
              <item name="src" type="9f88c78c:ScopeViewTreeModel$FileNode" />
              <item name="edu" type="9f88c78c:ScopeViewTreeModel$FileNode" />
            </path>
            <path>
              <item name="Dep2Rel" type="3d21c010:ScopeViewTreeModel$ProjectNode" />
              <item name="Dep2Rel" type="2674bda8:ScopeViewTreeModel$GroupNode" />
              <item name="src" type="9f88c78c:ScopeViewTreeModel$FileNode" />
              <item name="edu" type="9f88c78c:ScopeViewTreeModel$FileNode" />
              <item name="ucdenver" type="9f88c78c:ScopeViewTreeModel$FileNode" />
            </path>
            <path>
              <item name="Dep2Rel" type="3d21c010:ScopeViewTreeModel$ProjectNode" />
              <item name="Dep2Rel" type="2674bda8:ScopeViewTreeModel$GroupNode" />
              <item name="src" type="9f88c78c:ScopeViewTreeModel$FileNode" />
              <item name="edu" type="9f88c78c:ScopeViewTreeModel$FileNode" />
              <item name="ucdenver" type="9f88c78c:ScopeViewTreeModel$FileNode" />
              <item name="ccp" type="9f88c78c:ScopeViewTreeModel$FileNode" />
            </path>
            <path>
              <item name="Dep2Rel" type="3d21c010:ScopeViewTreeModel$ProjectNode" />
              <item name="Dep2Rel" type="2674bda8:ScopeViewTreeModel$GroupNode" />
              <item name="src" type="9f88c78c:ScopeViewTreeModel$FileNode" />
              <item name="edu" type="9f88c78c:ScopeViewTreeModel$FileNode" />
              <item name="ucdenver" type="9f88c78c:ScopeViewTreeModel$FileNode" />
              <item name="ccp" type="9f88c78c:ScopeViewTreeModel$FileNode" />
              <item name="nlp" type="9f88c78c:ScopeViewTreeModel$FileNode" />
            </path>
            <path>
              <item name="Dep2Rel" type="3d21c010:ScopeViewTreeModel$ProjectNode" />
              <item name="hpl-util" type="2674bda8:ScopeViewTreeModel$GroupNode" />
            </path>
            <path>
              <item name="Dep2Rel" type="3d21c010:ScopeViewTreeModel$ProjectNode" />
              <item name="hpl-util" type="2674bda8:ScopeViewTreeModel$GroupNode" />
              <item name="src" type="9f88c78c:ScopeViewTreeModel$FileNode" />
            </path>
            <path>
              <item name="Dep2Rel" type="3d21c010:ScopeViewTreeModel$ProjectNode" />
              <item name="Word2Vec-clj" type="2674bda8:ScopeViewTreeModel$GroupNode" />
            </path>
            <path>
              <item name="Dep2Rel" type="3d21c010:ScopeViewTreeModel$ProjectNode" />
              <item name="Word2Vec-clj" type="2674bda8:ScopeViewTreeModel$GroupNode" />
              <item name="src" type="9f88c78c:ScopeViewTreeModel$FileNode" />
            </path>
          </expand>
          <select />
        </subPane>
        <subPane subId="Scope 'Project Files'; set:Project Files; class com.intellij.psi.search.scope.ProjectFilesScope">
          <expand>
            <path>
              <item name="Dep2Rel" type="3d21c010:ScopeViewTreeModel$ProjectNode" />
              <item name="~/Documents/Dep2Rel" type="442cc68d:ScopeViewTreeModel$RootNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="PackagesPane" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="GoToKeyword.includeLibraries" value="false" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="add_unversioned_files" value="$PROJECT_DIR$/run/run_on_tantor.sh&#10;true&#10;/home/harrison/Documents/Dep2Rel/run/run_pitchme.sh" />
    <property name="cursive.last.file.extension./home/harrison/Documents/Dep2Rel/src" value="clj" />
    <property name="cursive.last.file.extension./home/harrison/Documents/Word2Vec-clj/src" value="clj" />
    <property name="last_opened_file_path" value="/opt/graalvm/bin/jvisualvm" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="project.structure.last.edited" value="Problems" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="settings.editor.selected.configurable" value="configurable.group.editor" />
  </component>
  <component name="RecentsManager">
    <key name="OPEN_URL_DIALOG">
      <recent name="https://github.com/gitpitch/in-60-seconds.git" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/lib" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/assets" />
      <recent name="$PROJECT_DIR$/run" />
      <recent name="$PROJECT_DIR$/../hpl-util/src" />
    </key>
  </component>
  <component name="ReplState" timestamp="1560474473080">{:repl-history {:ide [], :local [{:command &quot;(def property \&quot;INHIBITOR\&quot;)\n\n(def actual-true (set (map evaluation/edge-&gt;triple\n                           (k/edges-for-property model property))))\n\n(def all-triples (set (map evaluation/sent-&gt;triple sentences)))&quot;, :offset 211, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(log/info \&quot;Num actual true:\&quot; (count actual-true))&quot;, :offset 49, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(first (:textSources (bean (k/model annotations))))&quot;, :offset 51, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(bean (first (:textSources (bean (k/model annotations)))))&quot;, :offset 58, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(bean (first (:graphSpaces (bean (first (:textSources (bean (k/model annotations))))))))&quot;, :offset 88, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(-&gt;&gt; annotations \n     (k/model) \n     (bean) \n     (:textSources) \n     (first) \n     (bean) \n     (:graphSpaces) \n     (first))&quot;, :offset 129, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(-&gt;&gt; annotations \n     (k/model) \n     (bean) \n     (:textSources) \n     (first) \n     (bean) \n     (:graphSpaces))&quot;, :offset 115, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(-&gt;&gt; annotations \n     (k/model) \n     (bean) \n     (:textSources) \n     (first) \n     (bean))&quot;, :offset 94, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(-&gt;&gt; annotations\n     (k/model)\n     (bean)\n     (:textSources)\n     (first)\n     (bean))&quot;, :offset 89, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(-&gt;&gt; annotations\n     (k/model)\n     (bean)\n     (:textSources)\n     (second)\n     (bean))&quot;, :offset 90, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(-&gt;&gt; annotations\n     (k/model)\n     (bean)\n     (:textSources)\n     (second)\n     (bean)\n     :graphSpaces\n     (first)\n     (bean))&quot;, :offset 133, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(-&gt;&gt; annotations\n     (k/model)\n     (bean)\n     (:textSources)\n     (second)\n     (bean)\n     :graphSpaces\n     (first)\n     (bean)\n     :textSource)&quot;, :offset 150, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(-&gt;&gt; annotations\n     (k/model)\n     (bean)\n     (:textSources)\n     (second)\n     (bean)\n     :graphSpaces\n     (first)\n     (bean)\n     :relationAnnotations)&quot;, :offset 159, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(-&gt;&gt; annotations\n     (k/model)\n     (bean)\n     (:textSources)\n     (second)\n     (bean)\n     :graphSpaces\n     (first)\n     (bean)\n     :relationAnnotations\n     (first)\n     (bean))&quot;, :offset 184, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(-&gt;&gt; annotations\n     (k/model)\n     (bean)\n     (:textSources)\n     (second)\n     (bean)\n     :graphSpaces\n     (first)\n     (bean)\n     :relationAnnotations\n     (first)\n     (bean)\n     :textSource)&quot;, :offset 201, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(-&gt;&gt; annotations\n     (k/model)\n     (bean)\n     (:textSources)\n     (second)\n     (bean)\n     :graphSpaces\n     (first)\n     (bean)\n     :relationAnnotations\n     (first)\n     (bean)\n     :textSource\n     (bean)\n     :id)&quot;, :offset 222, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def model (k/simple-model annotations))&quot;, :offset 40, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def actual-true (set (map evaluation/edge-&gt;triple\n                           (k/edges-for-property model property))))&quot;, :offset 118, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(first actual-true)&quot;, :offset 19, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn c-metrics\n  [matches]\n  (math/calc-metrics {:predicted-true (evaluation/predicted-true matches)\n                      :actual-true    actual-true\n                      :all            all-triples}))&quot;, :offset 204, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def matches (let [seeds (clojure.set/union\n                             (evaluation/make-seeds sentences\n                               \&quot;17429625-T19\&quot; \&quot;17429625-T32\&quot;)\n                             #_(evaluation/make-seeds sentences\n                               \&quot;CRAFT_aggregate_ontology_Instance_21365\&quot;\n                               \&quot;CRAFT_aggregate_ontology_Instance_22495\&quot;))\n                     seed-thresh 0.95\n                     context-thresh 0.95\n                     cluster-thresh 0.7\n                     min-support 10\n                     params {:seed             (first seeds)\n                             :seed-thresh      seed-thresh\n                             :context-thresh   context-thresh\n                             :seed-match-fn    #(and (re/concepts-match? %1 %2)\n                                                     (&lt; seed-thresh (re/context-vector-cosine-sim %1 %2)))\n                             :context-match-fn #(&lt; context-thresh (re/context-vector-cosine-sim %1 %2))\n                             :cluster-merge-fn re/add-to-pattern\n                             :cluster-match-fn #(let [score (re/context-vector-cosine-sim %1 %2)]\n                                                  (and (&lt; (or %3 cluster-thresh) score)\n                                                       score))\n                             :min-support      min-support}\n                     matches (-&gt;&gt; (re/cluster-bootstrap-extract-relations seeds sentences params)\n                                  (map #(merge % params)))]\n                 (log/info \&quot;Metrics\&quot; (c-metrics matches))\n                 matches))&quot;, :offset 1624, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(evaluation/make-seeds sentences\n                               \&quot;17429625-T19\&quot; \&quot;17429625-T32\&quot;)&quot;, :offset 94, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(ns scripts.bio-creative-relation-extraction\n  (:require [clojure.java.io :as io]\n            [edu.ucdenver.ccp.nlp.readers :as rdr]\n            [edu.ucdenver.ccp.knowtator-clj :as k]\n            [edu.ucdenver.ccp.nlp.sentence :as sentence]\n            [edu.ucdenver.ccp.nlp.relation-extraction :as re]\n            [taoensso.timbre :as log]\n            [edu.ucdenver.ccp.nlp.evaluation :as evaluation])\n  (:import (edu.ucdenver.ccp.knowtator.model.object GraphSpace TextSource ConceptAnnotation Span AnnotationNode Quantifier)))&quot;, :offset 528, :ns &quot;user&quot;} {:command &quot;(def home-dir \&quot;~/\&quot;)&quot;, :offset 19, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def home-dir\n  (io/file \&quot;/\&quot; \&quot;media\&quot; \&quot;tuh8888\&quot; \&quot;Seagate Expansion Drive\&quot; \&quot;data\&quot;))&quot;, :offset 81, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def biocreative-dir\n  (io/file home-dir \&quot;BioCreative\&quot; \&quot;BCVI-2017\&quot; \&quot;ChemProt_Corpus\&quot;))&quot;, :offset 86, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def training-dir\n  (io/file biocreative-dir \&quot;chemprot_training\&quot;))&quot;, :offset 66, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def word-vector-dir\n  (io/file home-dir \&quot;WordVectors\&quot;))&quot;, :offset 56, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def word2vec-db\n  (.getAbsolutePath\n    (io/file word-vector-dir \&quot;bio-word-vectors-clj.vec\&quot;)))&quot;, :offset 95, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn biocreative-read-entities\n  [^KnowtatorModel annotations f]\n  (-&gt;&gt; (io/reader f)\n       (line-seq)\n       (map #(s/split % #\&quot;\\t\&quot;))\n       (map\n         (fn [[doc id concept start end _]]\n           (let [start (Integer/parseInt start)\n                 end (Integer/parseInt end)\n                 text-source ^TextSource (.get (.get (.getTextSources annotations) doc))\n                 concept-annotation (ConceptAnnotation. text-source id nil (.getDefaultProfile annotations) concept nil)\n                 span (Span. concept-annotation nil start end)]\n             (.removeModelListener annotations text-source)\n             (.add ^ConceptAnnotation concept-annotation span)\n             (.add (.getConceptAnnotations text-source) concept-annotation)\n             (.addModelListener annotations text-source))))))&quot;, :offset 819, :ns &quot;edu.ucdenver.ccp.nlp.readers&quot;} {:command &quot;(+ 1 1)&quot;, :offset 7, :ns &quot;user&quot;} {:command &quot;(ns scripts.bio-creative-relation-extraction\n  (:require [clojure.java.io :as io]\n            [edu.ucdenver.ccp.nlp.readers :as rdr]\n            [edu.ucdenver.ccp.knowtator-clj :as k]\n            [edu.ucdenver.ccp.nlp.sentence :as sentence]\n            [edu.ucdenver.ccp.nlp.relation-extraction :as re]\n            [taoensso.timbre :as log]\n            [edu.ucdenver.ccp.nlp.evaluation :as evaluation])\n  (:import (edu.ucdenver.ccp.knowtator.model.object GraphSpace TextSource ConceptAnnotation Span AnnotationNode Quantifier)))\n\n(def home-dir \&quot;~/\&quot;)\n\n(def home-dir\n  (io/file \&quot;/\&quot; \&quot;media\&quot; \&quot;tuh8888\&quot; \&quot;Seagate Expansion Drive\&quot; \&quot;data\&quot;))\n\n(def biocreative-dir\n  (io/file home-dir \&quot;BioCreative\&quot; \&quot;BCVI-2017\&quot; \&quot;ChemProt_Corpus\&quot;))\n\n(def training-dir\n  (io/file biocreative-dir \&quot;chemprot_training\&quot;))\n(def word-vector-dir\n  (io/file home-dir \&quot;WordVectors\&quot;))\n\n(def word2vec-db\n  (.getAbsolutePath\n    (io/file word-vector-dir \&quot;bio-word-vectors-clj.vec\&quot;)))\n\n(def annotations (k/view training-dir))&quot;, :offset 983, :ns &quot;user&quot;} {:command &quot;(defn biocreative-read-abstracts\n  [^KnowtatorModel annotations f]\n  (let [lines (-&gt;&gt; (io/reader f)\n                   (line-seq)\n                   (map #(s/split % #\&quot;\\t\&quot;)))]\n    (doall\n      (map\n       (fn [[id title abstract]]\n         (let [article-f (io/file (.getArticlesLocation annotations) (str id \&quot;.txt\&quot;))]\n           (spit article-f (str title \&quot;\\n\&quot; abstract))\n           (let [text-sources (.getTextSources annotations)\n                 text-source (TextSource. annotations\n                                          (io/file (.getAnnotationsLocation annotations)\n                                                   (str id \&quot;.xml\&quot;))\n                                          (.getName article-f))]\n             (.add text-sources\n                   text-source))))\n       lines))\n    (log/info \&quot;Done\&quot;)))&quot;, :offset 813, :ns &quot;edu.ucdenver.ccp.nlp.readers&quot;} {:command &quot;(defn biocreative-read-entities\n  [^KnowtatorModel annotations f]\n  (doall\n    (-&gt;&gt; (io/reader f)\n        (line-seq)\n        (map #(s/split % #\&quot;\\t\&quot;))\n        (map\n          (fn [[doc id concept start end _]]\n            (let [start (Integer/parseInt start)\n                  end (Integer/parseInt end)\n                  text-source ^TextSource (.get (.get (.getTextSources annotations) doc))\n                  concept-annotation (ConceptAnnotation. text-source id nil (.getDefaultProfile annotations) concept nil)\n                  span (Span. concept-annotation nil start end)]\n              (.removeModelListener annotations text-source)\n              (.add ^ConceptAnnotation concept-annotation span)\n              (.add (.getConceptAnnotations text-source) concept-annotation)\n              (.addModelListener annotations text-source))))))\n  (log/info \&quot;Done\&quot;))&quot;, :offset 864, :ns &quot;edu.ucdenver.ccp.nlp.readers&quot;} {:command &quot;(def annotations (k/view training-dir))&quot;, :offset 39, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def abstracts-f (io/file training-dir \&quot;chemprot_training_abstracts.tsv\&quot;))&quot;, :offset 74, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(rdr/biocreative-read-abstracts (k/model annotations) abstracts-f)&quot;, :offset 66, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def entities-f (io/file training-dir \&quot;chemprot_training_entities.tsv\&quot;))&quot;, :offset 72, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(rdr/biocreative-read-entities (k/model annotations) entities-f)&quot;, :offset 64, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def annotations (k/view training-dir))\n\n;(def relations-file (io/file training-dir \&quot;chemprot_training_relations.tsv\&quot;))\n;(rdr/biocreative-read-relations (k/model annotations) relations-file)\n\n\n\n(def abstracts-f (io/file training-dir \&quot;chemprot_training_abstracts.tsv\&quot;))\n(rdr/biocreative-read-abstracts (k/model annotations) abstracts-f)\n\n\n(def entities-f (io/file training-dir \&quot;chemprot_training_entities.tsv\&quot;))\n(rdr/biocreative-read-entities (k/model annotations) entities-f)\n&quot;, :offset 476, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(require '[clojure.tools.deps.alpha :as deps])&quot;, :offset 46, :ns &quot;user&quot;} {:command &quot;(use '(incanter core stats charts))&quot;, :offset 35, :ns &quot;user&quot;} {:command &quot;(view (histogram (sample-normal 1000)))&quot;, :offset 39, :ns &quot;user&quot;} {:command &quot;3\n4\n\n(let [x (range -3 3 0.1)]\n  (view (dynamic-xy-plot [mean (range -3 3 0.1)\n                          std-dev (range 0.1 10 0.1)]\n                         [x (pdf-normal x :mean mean :sd std-dev)])))&quot;, :offset 202, :ns &quot;user&quot;} {:command &quot;(ns scripts.bio-creative-relation-extraction\n  (:require [clojure.java.io :as io]\n            [edu.ucdenver.ccp.nlp.readers :as rdr]\n            [edu.ucdenver.ccp.knowtator-clj :as k]\n            [edu.ucdenver.ccp.nlp.sentence :as sentence]\n            [edu.ucdenver.ccp.nlp.relation-extraction :as re]\n            [taoensso.timbre :as log]\n            [edu.ucdenver.ccp.nlp.evaluation :as evaluation]\n            [incanter.stats :as stats]\n            [incanter.core :as incanter]\n            [incanter.charts :as charts]))&quot;, :offset 524, :ns &quot;user&quot;} {:command &quot;(let [x (range -3 3 0.1)]\n  (incanter/view (charts/dynamic-xy-plot [mean (range -3 3 0.1)\n                                          std-dev (range 0.1 10 0.1)]\n                                         [x (stats/pdf-normal x :mean mean :sd std-dev)])))&quot;, :offset 251, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(let [x (range -3 3 0.1)]\n  (incanter/view (charts/dynamic-scatter-plot [mean (range -3 3 0.1)\n                                          std-dev (range 0.1 10 0.1)]\n                                         [x (stats/pdf-normal x :mean mean :sd std-dev)])))&quot;, :offset 256, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(let [x (range -3 3 0.1)]\n  (incanter/view (charts/dynamic-scatter-plot [cluster-similarity-score-threshold (range 0 1 0.01)]\n                                              [x (cluster-tools/single-pass-cluster sentences #{}\n                                                                                    {:cluster-merge-fn re/add-to-pattern\n                                                                                     :cluster-match-fn #(let [score (re/context-vector-cosine-sim %1 %2)]\n                                                                                                          (and (&lt; (or %3 cluster-similarity-score-threshold) score)\n                                                                                                               score))})])))&quot;, :offset 787, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(take nil '(1 2 3 4))&quot;, :offset 19, :ns &quot;user&quot;} {:command &quot;(doseq )&quot;, :offset 8, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(uber/viz-graph g {:save {:filename \&quot;resources/dep_example.png\&quot; :format :png}})&quot;, :offset 79, :ns &quot;scripts.examples&quot;} {:command &quot;(def algorithm (uber/digraph [:text-sources :dependency-annotations]\n                             [:text-sources :concept-annotations]\n                             [:concept-annotations :context-paths]\n                             [:dependency-annotations :context-paths]\n                             [:context-paths :seeds]\n                             [:context-paths :sentences]\n                             [:seeds :patterns {:label :clustering}]\n                             [:patterns :filtering]\n                             [:sentences :filtering]\n                             [:filtering :matches]\n                             [:matches :seeds {:label :bootstrapping :color :red}]))&quot;, :offset 691, :ns &quot;scripts.examples&quot;} {:command &quot;(def output-color :blue)&quot;, :offset 24, :ns &quot;scripts.examples&quot;} {:command &quot;(def input-color :green)&quot;, :offset 24, :ns &quot;scripts.examples&quot;} {:command &quot;(def important-color :red)&quot;, :offset 26, :ns &quot;scripts.examples&quot;} {:command &quot;(def algorithm (uber/digraph [:text-sources {:color input-color}]\n                             [:patterns {:color output-color}]\n                             [:matches {:color output-color}]\n                             [:text-sources :dependency-annotations]\n                             [:text-sources :concept-annotations]\n                             [:concept-annotations :context-paths]\n                             [:dependency-annotations :context-paths]\n                             [:context-paths :seeds]\n                             [:context-paths :sentences]\n                             [:seeds :patterns {:label :clustering}]\n                             [:patterns :filtering]\n                             [:sentences :filtering]\n                             [:filtering :matches]\n                             [:matches :seeds {:label :bootstrapping :color important-color}]))&quot;, :offset 893, :ns &quot;scripts.examples&quot;} {:command &quot;(uber/viz-graph algorithm {:save {:filename \&quot;resources/algorithm.png\&quot; :format :png}})&quot;, :offset 85, :ns &quot;scripts.examples&quot;} {:command &quot;(uber/viz-graph algorithm {:bgcolor :transparent\n                           :save {:filename \&quot;resources/algorithm.png\&quot;\n                                  :format   :png}})&quot;, :offset 170, :ns &quot;scripts.examples&quot;} {:command &quot;(uber/viz-graph g {:bgcolor :transparent\n                   :save {:filename \&quot;resources/dep_example.png\&quot; \n                          :format :png}})&quot;, :offset 147, :ns &quot;scripts.examples&quot;} {:command &quot;(uber/viz-graph algorithm {:bgcolor :transparent\n                           :save {:filename \&quot;resources/algorithm.svgz\&quot;\n                                  :format   :svgz}})&quot;, :offset 172, :ns &quot;scripts.examples&quot;} {:command &quot;(uber/viz-graph algorithm {:bgcolor :transparent\n                           :save {:filename \&quot;resources/algorithm.svg\&quot;\n                                  :format   :svg}})&quot;, :offset 170, :ns &quot;scripts.examples&quot;} {:command &quot;(uber/viz-graph g {:bgcolor :transparentp\n                   :save {:filename \&quot;resources/dep_example.svg\&quot;\n                          :format :svg}})&quot;, :offset 147, :ns &quot;scripts.examples&quot;} {:command &quot;(uber/viz-graph g {:bgcolor :transparent\n                   :save {:filename \&quot;resources/dep_example.svg\&quot;\n                          :format :svg}})&quot;, :offset 146, :ns &quot;scripts.examples&quot;} {:command &quot;(uber/viz-graph g {:bgcolor :transparent\n                   :save {:filename \&quot;resources/dep_example.gif\&quot;\n                          :format :gif}})&quot;, :offset 146, :ns &quot;scripts.examples&quot;} {:command &quot;(uber/viz-graph algorithm {:bgcolor :transparent\n                           :scale 2\n                           :save {:filename \&quot;resources/algorithm.svg\&quot;\n                                  :format   :svg}})&quot;, :offset 206, :ns &quot;scripts.examples&quot;} {:command &quot;(uber/viz-graph algorithm {:bgcolor :transparent\n                           :scale 2\n                           #_:save #_{:filename \&quot;resources/algorithm.svg\&quot;\n                                  :format   :svg}})&quot;, :offset 210, :ns &quot;scripts.examples&quot;} {:command &quot;(uber/viz-graph algorithm {:bgcolor :transparent\n                           :scale 4\n                           #_:save #_{:filename \&quot;resources/algorithm.svg\&quot;\n                                  :format   :svg}})&quot;, :offset 210, :ns &quot;scripts.examples&quot;} {:command &quot;(uber/viz-graph g {:bgcolor :transparent\n                   :scale 4\n                   :save {:filename \&quot;resources/dep_example.jpg\&quot;\n                          :format :jpg}})&quot;, :offset 174, :ns &quot;scripts.examples&quot;} {:command &quot;(view (scatter-plot :Sepal.Length :Sepal.Width :data (incanter/get-dataset :iris) :group-by :Species))&quot;, :offset 63, :ns &quot;user&quot;} {:command &quot;(incanter/view (inc-charts/scatter-plot :Sepal.Length :Sepal.Width \n                             :data (incanter/get-dataset :iris) \n                             :group-by :Species))&quot;, :offset 10, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(ns edu.ucdenver.ccp.nlp.evaluation\n  (:require [cluster-tools]\n            [edu.ucdenver.ccp.nlp.relation-extraction :as re]\n            [taoensso.timbre :as log]\n            [incanter.core :as incanter]\n            [incanter.stats :as inc-stats]\n            [com.climate.claypoole :as cp]\n            [uncomplicate-context-alg :as context]\n            [incanter.charts :as inc-charts]\n            [incanter.svg :as inc-svg]\n            [edu.ucdenver.ccp.nlp.re-model :as re-model]))&quot;, :offset 484, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(incanter/view\n  (inc-charts/scatter-plot :Sepal.Length :Sepal.Width\n                           :data (incanter/get-dataset :iris)\n                           :group-by :Species))&quot;, :offset 178, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(incanter/view\n  (inc-charts/scatter-plot :Sepal.Length :Sepal.Width\n                           :data (incanter.datasets/get-dataset :iris)\n                           :group-by :Species))&quot;, :offset 120, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(incanter/view\n  (inc-charts/scatter-plot :Sepal.Length :Sepal.Width\n                           :data (incanter.core/get-dataset :iris)\n                           :group-by :Species))&quot;, :offset 116, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(use '(incanter core datasets))\n(def iris (get-dataset :iris))\n(view iris)&quot;, :offset 74, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(view (scatter-plot :Sepal.Length :Sepal.Width                     :data (get-dataset :iris)                    :group-by :Species))&quot;, :offset 132, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(view (incanter.charts/scatter-plot :Sepal.Length :Sepal.Width :data \n                    (get-dataset :iris) :group-by :Species))&quot;, :offset 23, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(view (incanter.charts/scatter-plot :Sepal.Length :Sepal.Width \n                                    :data (get-dataset :iris)\n                                    :group-by :Species))&quot;, :offset 106, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(with-data ($rollup :mean :count [:hair :eye] \n                    (get-dataset :hair-eye-color)) \n           (view $data) \n           (view (inc-charts/bar-chart :hair :count \n                                       :group-by :eye \n                                       :legend true)))&quot;, :offset 271, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(with-data ($rollup :mean :count [:hair :eye] \n                    (get-dataset :hair-eye-color))\n           (view (inc-charts/scatter-plot :hair :count \n                                       :group-by :eye \n                                       :legend true)))&quot;, :offset 97, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(view (incanter.charts/scatter-plot :Sepal.Length :Sepal.Width\n                                    :legend true\n                                    :data (get-dataset :iris)\n                                    :group-by :Species))&quot;, :offset 111, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(view (incanter.charts/xy-plot :Sepal.Length :Sepal.Width\n                                    :legend true\n                                    :data (get-dataset :iris)\n                                    :group-by :Species))&quot;, :offset 30, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(view (incanter.charts/xy-plot :Sepal.Length :Sepal.Width\n                               :legend true\n                               :series-label true\n                               :data (get-dataset :iris)\n                               :group-by :Species))&quot;, :offset 151, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(view (incanter.charts/scatter-plot :Sepal.Length :Sepal.Width\n                               :legend true\n                               :series-label true\n                               :data (get-dataset :iris)\n                               :group-by :Species))&quot;, :offset 35, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(view (incanter.charts/scatter-plot :Sepal.Length :Sepal.Width\n                               :legend true\n                               :series-label [1 2 3]\n                               :data (get-dataset :iris)\n                               :group-by :Species))&quot;, :offset 158, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(view (incanter.charts/scatter-plot :Sepal.Length :Sepal.Width\n                               :legend true\n                               :series-label [1 2 3] 2\n                               :data (get-dataset :iris)\n                               :group-by :Species))&quot;, :offset 161, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(view (incanter.charts/scatter-plot :Sepal.Length :Sepal.Width\n                               :legend true\n                               :series-label :Species\n                               :data (get-dataset :iris)\n                               :group-by :Species))&quot;, :offset 160, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(view (incanter.charts/xy-plot :Sepal.Length :Sepal.Width\n                               :legend true\n                               :series-label {:Species}\n                               :data (get-dataset :iris)\n                               :group-by :Species))&quot;, :offset 30, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(view (incanter.charts/xy-plot :Sepal.Length :Sepal.Width\n                               :legend true\n                               :series-label {:Species 1}\n                               :data (get-dataset :iris)\n                               :group-by :Species))&quot;, :offset 158, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(view (incanter.charts/scatter-plot :Sepal.Length :Sepal.Width\n                               :legend true\n                               :series-label (sel (get-dataset :iris) :cols :Species)\n                               :data (get-dataset :iris)\n                               :group-by :Species))&quot;, :offset 301, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(view (incanter.charts/scatter-plot :Sepal.Length :Sepal.Width\n                               :legend true\n                               :series-label 'x\n                               :data (get-dataset :iris)\n                               :group-by :Species))&quot;, :offset 153, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(def (incanter.charts/scatter-plot :Sepal.Length :Sepal.Width\n                              :legend true\n                              :series-label 'x\n                              :data (get-dataset :iris)\n                              :group-by :Species))&quot;, :offset 4, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(def plot (incanter.charts/scatter-plot :Sepal.Length :Sepal.Width\n                                   :legend true\n                                   :series-label 'x\n                                   :data (get-dataset :iris)\n                                   :group-by :Species))&quot;, :offset 9, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(incanter.charts/add-categories plot [10] [10 20 40] :series-label \&quot;winter-break\&quot;)&quot;, :offset 41, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(incanter.charts/add-points plot [10] [10 20 40] :series-label \&quot;winter-break\&quot;)&quot;, :offset 27, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(incanter.charts/add-points plot [10 10 10] [10 20 40] :series-label \&quot;winter-break\&quot;)&quot;, :offset 42, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(get (map identity [1 2 3]) 0)&quot;, :offset 26, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(incanter.charts/add-points plot [100 100 100] [100 200 400] :series-label \&quot;winter-break1\&quot;)&quot;, :offset 59, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(view plot)&quot;, :offset 11, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(incanter.charts/add-points plot [100 100 100] [100 200 400\n                                                ] :series-label \&quot;winter-break1\&quot;)&quot;, :offset 108, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;}], :remote [{:command &quot;(log/set-level! :debug)&quot;, :offset 23, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn word-embedding\n  [word]\n  (try\n    (if-let [vec (get *word-vectors* word)]\n      vec\n      (log/debug \&quot;Word vector not found\&quot; word) #_(throw (Throwable. (str \&quot;Word not found \&quot; word))))\n    (catch StreamCorruptedException e\n      (log/warn \&quot;Input stream corrupted on\&quot; word)\n      (throw e))))&quot;, :offset 297, :ns &quot;word2vec&quot;} {:command &quot;(word2vec/with-word2vec word2vec-db\n  (word2vec/word-embedding \&quot;clear\&quot;))&quot;, :offset 72, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(word2vec/with-word2vec word2vec-db\n  (word2vec/word-embedding \&quot;cleavage\&quot;))&quot;, :offset 75, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def training-model (word2vec/with-word2vec word2vec-db\n                      (re-model/make-model training-knowtator-view factory)))&quot;, :offset 133, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(word2vec/with-word2vec word2vec-db\n  (word2vec/word-embedding \&quot;low\&quot;))&quot;, :offset 70, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(let [word2vec-dir (io/file  \&quot;/home\&quot; \&quot;harrison\&quot; \&quot;WordVectors\&quot;) #_(io/file \&quot;E:\&quot; \&quot;data\&quot; \&quot;WordVectors\&quot;)\n        model-f (io/file word2vec-dir \&quot;bio-word-vectors.vec\&quot;)\n        db-f (.getAbsolutePath (io/file word2vec-dir \&quot;bio-word-vectors-clj.vec\&quot;))]\n    (with-word2vec db-f\n      (make-word2vec-database model-f)))&quot;, :offset 310, :ns &quot;word2vec&quot;} {:command &quot;(defn make-word2vec-database\n  [model-f]\n  (let [word-vectors (-&gt;&gt; (load-word2vec model-f)\n                          (map-indexed vector)\n                          (partition-all 1000))]\n    (cp/pdoseq (inc (cp/ncpus)) [vec-part word-vectors]\n               (doseq [[i [k v]] vec-part]\n                 (when (zero? (rem i 1000)) (log/info i))\n                 (spice/assoc! *word-vectors* k v)))))&quot;, :offset 398, :ns &quot;word2vec&quot;} {:command &quot;(let [word2vec-dir (io/file  \&quot;/home\&quot; \&quot;harrison\&quot; \&quot;WordVectors\&quot;) #_(io/file \&quot;E:\&quot; \&quot;data\&quot; \&quot;WordVectors\&quot;)\n        model-f (io/file word2vec-dir \&quot;bio-word-vectors.vec\&quot;)\n        db-f (io/file word2vec-dir \&quot;bio-word-vectors-clj.vec\&quot;)]\n    (with-word2vec db-f\n      (make-word2vec-database model-f)))&quot;, :offset 291, :ns &quot;word2vec&quot;} {:command &quot;(apply into {} [1 'x 2 'y])&quot;, :offset 25, :ns &quot;user&quot;} {:command &quot;(apply assoc {} [1 'x 2 'y])&quot;, :offset 12, :ns &quot;user&quot;} {:command &quot;(defn make-model\n  [v factory word2vec-db]\n  (log/info \&quot;Making model\&quot;)\n  (word2vec/with-word2vec word2vec-db\n    (let [model (as-&gt; (k/simple-model v) model\n                      (assoc model :factory factory\n                                   :wod2vec-db word2vec-db)\n                      (update model :structure-annotations (fn [structure-annotations]\n                                                             (log/info \&quot;Making structure annotations\&quot;)\n                                                             (util/pmap-kv (fn [s]\n                                                                             (-&gt;&gt; s\n                                                                                  (assign-embedding model)\n                                                                                  (assign-sent-id model)))\n                                                                           structure-annotations)))\n                      (update model :concept-annotations (fn [concept-annotations]\n                                                           (log/info \&quot;Making concept annotations\&quot;)\n                                                           (util/pmap-kv (fn [s]\n                                                                           (assign-tok model s))\n                                                                         concept-annotations))))]\n      ;(log/info \&quot;Model\&quot; (util/map-kv count (model-params model)))\n      model)))&quot;, :offset 1478, :ns &quot;edu.ucdenver.ccp.nlp.re-model&quot;} {:command &quot;(def training-model (re-model/make-model training-knowtator-view factory word2vec-db))&quot;, :offset 86, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(keys training-model-with-props)&quot;, :offset 32, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn sentences-&gt;dataset\n  [{:keys [properties sentences word2vec-db] :as model}]\n  (word2vec/with-word2vec word2vec-db\n    (assoc model\n      :sentences-dataset (-&gt;&gt; sentences\n                              (filter #(contains? properties (:property %)))\n                              (filter #(re-model/context-vector % model))\n                              (pmap #(flatten-context-vector % model))\n                              (map #(dissoc % :entities :concepts :context))\n                              (vec)\n                              (incanter/to-dataset)))))&quot;, :offset 567, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(defn sentences-&gt;dataset\n  [{:keys [properties sentences word2vec-db] :as model}]\n  (log/warn word2vec-db)\n  (word2vec/with-word2vec word2vec-db\n    (assoc model\n      :sentences-dataset (-&gt;&gt; sentences\n                              (filter #(contains? properties (:property %)))\n                              (filter #(re-model/context-vector % model))\n                              (pmap #(flatten-context-vector % model))\n                              (map #(dissoc % :entities :concepts :context))\n                              (vec)\n                              (incanter/to-dataset)))))&quot;, :offset 592, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(def training-model-with-sents (-&gt; training-model-with-sents\n                                   (assoc :word2vec-db (:wod2vec-db training-model-with-sents))\n                                   (dissoc :wod2vec-db)))&quot;, :offset 214, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def training-model-with-props (-&gt; training-model-with-props\n                                   (assoc :word2vec-db (:wod2vec-db training-model-with-props))\n                                   (dissoc :wod2vec-db)))&quot;, :offset 214, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(:wod2vec-db training-model-with-props)&quot;, :offset 39, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(:word2vec-db training-model-with-props)&quot;, :offset 40, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def pca-plot (evaluation/pca-plot model-with-sentences-dataset {:save {:file (io/file results-dir \&quot;pca-all.svg\&quot;)}\n                                                                 :view            true}))&quot;, :offset 204, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def split-training-model (-&gt; training-model-with-props\n                              (merge {:seed-frac 0.75\n                                      :rng       0.022894})\n                              (re-model/split-train-test)))&quot;, :offset 229, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def training-model-with-props (-&gt;&gt; #{\&quot;PART-OF\&quot;\n                                      \&quot;REGULATOR\&quot; \&quot;DIRECT-REGULATOR\&quot; \&quot;INDIRECT-REGULATOR\&quot;\n                                      \&quot;UPREGULATOR\&quot; \&quot;ACTIVATOR\&quot; \&quot;INDIRECT-UPREGULATOR\&quot;\n                                      \&quot;DOWNREGULATOR\&quot; \&quot;INHIBITOR\&quot; \&quot;INDIRECT-DOWNREGULATOR\&quot;\n                                      \&quot;AGONIST\&quot; \&quot;AGONIST-ACTIVATOR\&quot; \&quot;AGONIST-INHIBITOR\&quot;\n                                      \&quot;ANTAGONIST\&quot;\n                                      \&quot;MODULATOR\&quot; \&quot;MODULATOR‐ACTIVATOR\&quot; \&quot;MODULATOR‐INHIBITOR\&quot;\n                                      \&quot;COFACTOR\&quot;\n                                      \&quot;SUBSTRATE\&quot; \&quot;PRODUCT-OF\&quot; \&quot;SUBSTRATE_PRODUCT-OF\&quot;\n                                      \&quot;NOT\&quot;\n                                      re-model/NONE}\n                                    #_#{\&quot;INHIBITOR\&quot; #_re-model/NONE}\n                                    (assoc training-model-with-sents :properties)))&quot;, :offset 933, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def training-model-with-props (-&gt;&gt; #{\&quot;PART-OF\&quot;\n                                      \&quot;REGULATOR\&quot; \&quot;DIRECT-REGULATOR\&quot; \&quot;INDIRECT-REGULATOR\&quot;\n                                      \&quot;UPREGULATOR\&quot; \&quot;ACTIVATOR\&quot; \&quot;INDIRECT-UPREGULATOR\&quot;\n                                      \&quot;DOWNREGULATOR\&quot; \&quot;INHIBITOR\&quot; \&quot;INDIRECT-DOWNREGULATOR\&quot;\n                                      \&quot;AGONIST\&quot; \&quot;AGONIST-ACTIVATOR\&quot; \&quot;AGONIST-INHIBITOR\&quot;\n                                      \&quot;ANTAGONIST\&quot;\n                                      \&quot;MODULATOR\&quot; \&quot;MODULATOR‐ACTIVATOR\&quot; \&quot;MODULATOR‐INHIBITOR\&quot;\n                                      \&quot;COFACTOR\&quot;\n                                      \&quot;SUBSTRATE\&quot; \&quot;PRODUCT-OF\&quot; \&quot;SUBSTRATE_PRODUCT-OF\&quot;\n                                      \&quot;NOT\&quot;\n                                      re-model/NONE}\n                                    #_#{\&quot;INHIBITOR\&quot; #_re-model/NONE}\n                                    (assoc training-model-with-sents \n                                      :word2vec-db word2vec-db\n                                      :properties)))&quot;, :offset 1035, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn make-sentences\n  [model]\n  (log/info \&quot;Making sentences\&quot;)\n  (let [sentences (-&gt;&gt; model\n                       (concept-annotations-&gt;sentences)\n                       (pmap #(assign-embedding model %))\n                       (pmap #(assign-property model %))\n                       (doall))]\n    (log/info \&quot;Num sentences:\&quot; (count sentences))\n    (log/info \&quot;Num sentences with property:\&quot; (-&gt;&gt; sentences\n                                                  (group-by :property)\n                                                  (util/map-kv count)))\n    sentences))&quot;, :offset 564, :ns &quot;edu.ucdenver.ccp.nlp.re-model&quot;} {:command &quot;(def training-model-with-sents (assoc training-model :sentences (re-model/make-sentences training-model)))&quot;, :offset 106, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def training-model-with-props (-&gt;&gt; #{\&quot;PART-OF\&quot;\n                                      \&quot;REGULATOR\&quot; \&quot;DIRECT-REGULATOR\&quot; \&quot;INDIRECT-REGULATOR\&quot;\n                                      \&quot;UPREGULATOR\&quot; \&quot;ACTIVATOR\&quot; \&quot;INDIRECT-UPREGULATOR\&quot;\n                                      \&quot;DOWNREGULATOR\&quot; \&quot;INHIBITOR\&quot; \&quot;INDIRECT-DOWNREGULATOR\&quot;\n                                      \&quot;AGONIST\&quot; \&quot;AGONIST-ACTIVATOR\&quot; \&quot;AGONIST-INHIBITOR\&quot;\n                                      \&quot;ANTAGONIST\&quot;\n                                      \&quot;MODULATOR\&quot; \&quot;MODULATOR‐ACTIVATOR\&quot; \&quot;MODULATOR‐INHIBITOR\&quot;\n                                      \&quot;COFACTOR\&quot;\n                                      \&quot;SUBSTRATE\&quot; \&quot;PRODUCT-OF\&quot; \&quot;SUBSTRATE_PRODUCT-OF\&quot;\n                                      \&quot;NOT\&quot;\n                                      re-model/NONE}\n                                    #_#{\&quot;INHIBITOR\&quot; #_re-model/NONE}\n                                    (assoc training-model-with-sents\n                                      :word2vec-db word2vec-db\n                                      :properties)))&quot;, :offset 1034, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def model-with-sentences-dataset (evaluation/sentences-&gt;dataset training-model-with-props))&quot;, :offset 92, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(word2vec/with-word2vec word2vec-db\n  (word2vec/word-embedding \&quot;the\&quot;)\n  (Thread/sleep 1000))&quot;, :offset 92, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def word2vec-db (io/file word-vector-dir \&quot;bio-word-vectors-clj2.vec\&quot;))&quot;, :offset 71, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(ns scripts.bio-creative-relation-extraction\n  (:require [clojure.java.io :as io]\n            [edu.ucdenver.ccp.knowtator-clj :as k]\n            [edu.ucdenver.ccp.nlp.re-model :as re-model]\n            [taoensso.timbre :as log]\n            [edu.ucdenver.ccp.nlp.evaluation :as evaluation]\n            [edu.ucdenver.ccp.nlp.readers :as rdr]\n            [uncomplicate.neanderthal.native :as thal-native]\n            [incanter.core :as incanter]))\n\n(log/set-level! :debug)\n\n;; File naming patterns\n(def sep \&quot;_\&quot;)\n(def training-prefix (apply str (interpose sep [\&quot;chemprot\&quot; \&quot;training\&quot;])))\n(def training-pattern (apply str (interpose sep [training-prefix \&quot;%s\&quot;])))\n(def testing-prefix (apply str (interpose sep [\&quot;chemprot\&quot; \&quot;test\&quot; \&quot;gs\&quot;])))\n(def testing-pattern (apply str (interpose sep [\&quot;chemprot\&quot; \&quot;test\&quot; \&quot;%s\&quot; \&quot;gs\&quot;])))\n\n;;; FILES ;;;\n(def home-dir (io/file \&quot;/\&quot; \&quot;home\&quot; \&quot;harrison\&quot;))\n#_(def home-dir (io/file \&quot;/\&quot; \&quot;media\&quot; \&quot;harrison\&quot; \&quot;Seagate Expansion Drive\&quot; \&quot;data\&quot;))\n(def biocreative-dir (io/file home-dir \&quot;BioCreative\&quot; \&quot;BCVI-2017\&quot; \&quot;ChemProt_Corpus\&quot;))\n(def training-dir (io/file biocreative-dir training-prefix))\n(def testing-dir (io/file biocreative-dir testing-prefix))\n(def results-dir (io/file training-dir \&quot;results\&quot;))\n\n(def word-vector-dir (io/file home-dir \&quot;WordVectors\&quot;))\n(def word2vec-db (io/file word-vector-dir \&quot;bio-word-vectors-clj2.vec\&quot;))\n(word2vec/with-word2vec word2vec-db\n  (word2vec/word-embedding \&quot;the\&quot;))&quot;, :offset 1410, :ns &quot;user&quot;} {:command &quot;(def word2vec-db (io/file word-vector-dir \&quot;bio-word-vectors-clj.vec\&quot;))&quot;, :offset 70, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(word2vec/with-word2vec word2vec-db\n  (word2vec/word-embedding \&quot;the\&quot;))&quot;, :offset 70, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(word2vec/with-word2vec word2vec-db\n  (word2vec/word-embedding \&quot;channel\&quot;))&quot;, :offset 74, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(word2vec/with-word2vec word2vec-db\n  (word2vec/word-embedding \&quot;inhibitory\&quot;))&quot;, :offset 77, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn make-sentences\n  [{:keys [word2vec-db] :as model}]\n  (log/info \&quot;Making sentences\&quot;)\n  (word2vec/with-word2vec word2vec-db\n    (let [sentences (-&gt;&gt; model\n                         (concept-annotations-&gt;sentences)\n                         (pmap #(assign-embedding model %))\n                         (pmap #(assign-property model %))\n                         (doall))]\n      (log/info \&quot;Num sentences:\&quot; (count sentences))\n      (log/info \&quot;Num sentences with property:\&quot; (-&gt;&gt; sentences\n                                                    (group-by :property)\n                                                    (util/map-kv count)))\n      sentences)))&quot;, :offset 649, :ns &quot;edu.ucdenver.ccp.nlp.re-model&quot;} {:command &quot;(def training-model-with-sents (assoc training-model :sentences (re-model/make-sentences training-model)))\n(def training-model-with-props (-&gt;&gt; #{\&quot;PART-OF\&quot;\n                                      \&quot;REGULATOR\&quot; \&quot;DIRECT-REGULATOR\&quot; \&quot;INDIRECT-REGULATOR\&quot;\n                                      \&quot;UPREGULATOR\&quot; \&quot;ACTIVATOR\&quot; \&quot;INDIRECT-UPREGULATOR\&quot;\n                                      \&quot;DOWNREGULATOR\&quot; \&quot;INHIBITOR\&quot; \&quot;INDIRECT-DOWNREGULATOR\&quot;\n                                      \&quot;AGONIST\&quot; \&quot;AGONIST-ACTIVATOR\&quot; \&quot;AGONIST-INHIBITOR\&quot;\n                                      \&quot;ANTAGONIST\&quot;\n                                      \&quot;MODULATOR\&quot; \&quot;MODULATOR‐ACTIVATOR\&quot; \&quot;MODULATOR‐INHIBITOR\&quot;\n                                      \&quot;COFACTOR\&quot;\n                                      \&quot;SUBSTRATE\&quot; \&quot;PRODUCT-OF\&quot; \&quot;SUBSTRATE_PRODUCT-OF\&quot;\n                                      \&quot;NOT\&quot;\n                                      re-model/NONE}\n                                    #_#{\&quot;INHIBITOR\&quot; #_re-model/NONE}\n                                    (assoc training-model-with-sents\n                                      :word2vec-db word2vec-db\n                                      :properties)))&quot;, :offset 1141, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn pca-2\n  [data]\n  (let [X (incanter/to-matrix data)\n        pca (inc-stats/principal-components X)\n        components (:rotation pca)\n        pc1 (incanter/sel components :cols 0)\n        pc2 (incanter/sel components :cols 1)\n        x1 (incanter/mmult X pc1)\n        x2 (incanter/mmult X pc2)]\n    [x1 x2]))&quot;, :offset 313, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(def training-model-with-props (update training-model-with-props \n                                       :sentences (fn [sentences]\n                                                    (map #(re-model/map-&gt;Sentence %) sentences))))&quot;, :offset 230, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def training-model-with-props (update model-with-sentences-dataset\n                                       :sentences (fn [sentences]\n                                                    (map #(re-model/map-&gt;Sentence %) sentences))))&quot;, :offset 232, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def model-with-sentences-dataset (update model-with-sentences-dataset\n                                          :sentences (fn [sentences]\n                                                       (map #(re-model/map-&gt;Sentence %) sentences))))&quot;, :offset 241, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(re-model/context-vector (first (:sentences model-with-sentences-dataset)) model-with-sentences-dataset)&quot;, :offset 104, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def pca-plots (evaluation/pca-plots model-with-sentences-dataset {:save {:file (io/file results-dir \&quot;pca-all.svg\&quot;)}}))&quot;, :offset 119, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(ns scripts.bio-creative-relation-extraction\n  (:require [clojure.java.io :as io]\n            [edu.ucdenver.ccp.knowtator-clj :as k]\n            [edu.ucdenver.ccp.nlp.re-model :as re-model]\n            [taoensso.timbre :as log]\n            [edu.ucdenver.ccp.nlp.evaluation :as evaluation]\n            [edu.ucdenver.ccp.nlp.readers :as rdr]\n            [uncomplicate.neanderthal.native :as thal-native]\n            [incanter.core :as incanter]\n            [incanter.svg :as inc-svg]))&quot;, :offset 483, :ns &quot;user&quot;} {:command &quot;(keys (first pca-plots))&quot;, :offset 24, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(keys (bean (first pca-plots)))&quot;, :offset 31, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(incanter/view (first pca-plots))&quot;, :offset 33, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(ns scripts.bio-creative-relation-extraction\n  (:require [clojure.java.io :as io]\n            [edu.ucdenver.ccp.knowtator-clj :as k]\n            [edu.ucdenver.ccp.nlp.re-model :as re-model]\n            [taoensso.timbre :as log]\n            [edu.ucdenver.ccp.nlp.evaluation :as evaluation]\n            [edu.ucdenver.ccp.nlp.readers :as rdr]\n            [uncomplicate.neanderthal.native :as thal-native]\n            [incanter.core :as incanter]\n            [incanter.charts :as inc-charts]\n            [incanter.svg :as inc-svg]))&quot;, :offset 528, :ns &quot;user&quot;} {:command &quot;(let [plot (first pca-plots)]\n  (inc-charts/set-title plot \&quot;PCA for NONE and SUBSTRATE\&quot;))&quot;, :offset 89, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(let [plot (first pca-plots)\n      p \&quot;SUBSTRATE\&quot;\n      title (format \&quot;PCA for NONE and %s\&quot; p)]\n  (inc-charts/set-title plot title)\n  (inc-svg/save-svg plot (format (str (io/file results-dir \&quot;%\&quot; ) \&quot;.svg\&quot;) title)))&quot;, :offset 212, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(let [plot (first pca-plots)\n      p \&quot;SUBSTRATE\&quot;\n      title (format \&quot;PCA for NONE and %s\&quot; p)\n      file-name (format (str (io/file results-dir \&quot;%\&quot; ) \&quot;.svg\&quot;) title)]\n  (inc-charts/set-title plot title)\n  file-name\n  #_(inc-svg/save-svg plot file-name))&quot;, :offset 252, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(let [plot (first pca-plots)\n      p \&quot;SUBSTRATE\&quot;\n      title (format \&quot;PCA for NONE and %s\&quot; p)\n      file-name (format (str (io/file results-dir \&quot;%\&quot; ) #_\&quot;.svg\&quot;) title)]\n  (inc-charts/set-title plot title)\n  file-name\n  #_(inc-svg/save-svg plot file-name))&quot;, :offset 254, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(let [plot (first pca-plots)\n      p \&quot;SUBSTRATE\&quot;\n      title (format \&quot;PCA for NONE and %s\&quot; p)\n      file-name (format (str (io/file results-dir \&quot;%s\&quot; ) #_\&quot;.svg\&quot;) title)]\n  (inc-charts/set-title plot title)\n  file-name\n  #_(inc-svg/save-svg plot file-name))&quot;, :offset 255, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(let [plot (first pca-plots)\n      p \&quot;SUBSTRATE\&quot;\n      title (format \&quot;PCA for NONE and %s\&quot; p)\n      file-name (format (str (io/file results-dir \&quot;%s\&quot; ) \&quot;.svg\&quot;) title)]\n  (inc-charts/set-title plot title)\n  file-name\n  #_(inc-svg/save-svg plot file-name))&quot;, :offset 253, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(let [plot (first pca-plots)\n      p \&quot;SUBSTRATE\&quot;\n      title (format \&quot;PCA for NONE and %s\&quot; p)\n      file-name (format (str (io/file results-dir \&quot;%s\&quot; ) \&quot;.svg\&quot;) title)]\n  (inc-charts/set-title plot title)\n  (inc-svg/save-svg plot file-name))&quot;, :offset 239, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def pca-plots (evaluation/pca-plots model-with-sentences-dataset {:save {:file (io/file results-dir \&quot;%s\&quot;)}}))&quot;, :offset 110, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defmethod save :incanter.core/dataset\n  [dataset filename &amp; {:keys [delim header append]\n                       :or {append false delim \\,}}]\n  (let [header (or header (map #(if (keyword? %) (name %) %)\n                               (:column-names dataset)))\n        rows (to-list dataset)\n        data (if append\n               rows\n               (conj rows header)) ]\n    (with-open [out-file (io/writer (if (= \&quot;-\&quot; filename)\n                                      *out*\n                                      filename)\n                                    :append append)]\n      (csv/write-csv out-file data :separator delim))))&quot;, :offset 630, :ns &quot;incanter.io&quot;} {:command &quot;(ns scripts.bio-creative-relation-extraction\n  (:require [clojure.java.io :as io]\n            [edu.ucdenver.ccp.knowtator-clj :as k]\n            [edu.ucdenver.ccp.nlp.re-model :as re-model]\n            [taoensso.timbre :as log]\n            [edu.ucdenver.ccp.nlp.evaluation :as evaluation]\n            [edu.ucdenver.ccp.nlp.readers :as rdr]\n            [uncomplicate.neanderthal.native :as thal-native]\n            [incanter.core :as incanter]\n            [incanter.charts :as inc-charts]\n            [incanter.io :as inc-io]\n            [incanter.svg :as inc-svg]))&quot;, :offset 565, :ns &quot;user&quot;} {:command &quot;(require '[incanter.core :as incanter])&quot;, :offset 37, :ns &quot;user&quot;} {:command &quot;(incanter/save (:sentences-dataset model-with-sentences-dataset) (str (io/file training-dir \&quot;sentences-dataset.csv\&quot;)))&quot;, :offset 118, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn single-pass-cluster\n  \&quot;Occurs in O(N^2*M) time\&quot;\n  [{:keys [vector-fn] :as params} samples clusters]\n  (let [clusters (vec clusters)\n        samples (vec samples)]\n    (loop [samples (vec samples)\n           sample-vectors (-&gt;&gt; samples\n                               (map vector-fn)\n                               (pmap #(linear-algebra/unit-vec params %))\n                               (vec))\n           clusters (vec clusters)]\n      (let [cluster-vectors (-&gt;&gt; clusters\n                                 (map vector-fn)\n                                 (pmap #(linear-algebra/unit-vec params %)))\n            {:keys [i j]} (nearest-sample-cluster-pair cluster-vectors sample-vectors params)]\n        (let [sample (get samples i)\n              cluster (get clusters j)]\n          (log/info (type sample) (type cluster))\n          (cond cluster (let [samples (vec-remove samples i)\n                              sample-vectors (vec-remove sample-vectors i)\n                              clusters (update-cluster clusters cluster j sample params)]\n                          (recur samples sample-vectors clusters))\n                (seq samples) (let [sample (first samples)\n                                    samples (vec-remove samples 0)\n                                    sample-vectors (vec-remove sample-vectors 0)\n                                    clusters (conj-cluster clusters sample params)]\n                                (recur samples sample-vectors clusters))\n                :else clusters))))))&quot;, :offset 1519, :ns &quot;cluster-tools&quot;} {:command &quot;(ns cluster-tools\n  (:require [linear-algebra :as linear-algebra]\n            [taoensso.timbre :as log]))&quot;, :offset 105, :ns &quot;user&quot;} {:command &quot;(defn single-pass-cluster\n  \&quot;Occurs in O(N^2*M) time\&quot;\n  [{:keys [vector-fn] :as params} samples clusters]\n  (let [clusters (vec clusters)\n        samples (vec samples)]\n    (loop [samples (vec samples)\n           sample-vectors (-&gt;&gt; samples\n                               (map vector-fn)\n                               (pmap #(linear-algebra/unit-vec params %))\n                               (vec))\n           clusters (vec clusters)]\n      (let [cluster-vectors (-&gt;&gt; clusters\n                                 (map vector-fn)\n                                 (pmap #(linear-algebra/unit-vec params %)))\n            {:keys [i j]} (nearest-sample-cluster-pair cluster-vectors sample-vectors params)]\n        (let [sample (get samples i)\n              cluster (get clusters j)]\n          (log/info (type (first samples)) (type (first clusters)))\n          (cond cluster (let [samples (vec-remove samples i)\n                              sample-vectors (vec-remove sample-vectors i)\n                              clusters (update-cluster clusters cluster j sample params)]\n                          (recur samples sample-vectors clusters))\n                (seq samples) (let [sample (first samples)\n                                    samples (vec-remove samples 0)\n                                    sample-vectors (vec-remove sample-vectors 0)\n                                    clusters (conj-cluster clusters sample params)]\n                                (recur samples sample-vectors clusters))\n                :else clusters))))))&quot;, :offset 1537, :ns &quot;cluster-tools&quot;} {:command &quot;(defn pattern-update\n  [{:keys [properties new-matches] :as model} patterns]\n  (mapcat (fn [property]\n            (let [samples (filter #(= (:predicted %) property) new-matches)\n                  patterns (filter #(= (:predicted %) property) patterns)]\n              (when (and (seq samples) (seq patterns))\n                (log/info \&quot;Clustering\&quot; property)\n                (-&gt;&gt; samples\n                     (partition-all 1000)\n                     (mapcat (fn [sample-part]\n                               (-&gt;&gt; patterns\n                                    (cluster-tools/single-pass-cluster model sample-part)\n                                    (map #(assoc % :predicted property)))))))))\n          properties))&quot;, :offset 712, :ns &quot;edu.ucdenver.ccp.nlp.relation-extraction&quot;} {:command &quot;(defn support-filter\n  [{:keys [min-match-support new-matches]} patterns]\n  (filter (fn [p]\n            (or (empty? new-matches)\n                (-&gt;&gt; p :support\n                     (count)\n                     (&lt;= min-match-support))))\n          patterns))&quot;, :offset 257, :ns &quot;edu.ucdenver.ccp.nlp.relation-extraction&quot;} {:command &quot;(def prepared-model (-&gt; training-model-with-props\n                        (assoc :seed-frac 0.2\n                               :rng 0.022894)\n                        (re-model/split-train-test)))&quot;, :offset 195, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn run-model\n  \&quot;Run model with parameters\&quot;\n  [model results-dir]\n  (let [model (if (contains? model :all-samples)\n                model\n                (re-model/split-train-test model))\n        results (-&gt; model\n                    (assoc :vector-fn #(re-model/context-vector % model)\n                           :context-match-fn re/concept-context-match\n                           :cluster-merge-fn re-model/add-to-pattern\n                           :pattern-update-fn re/pattern-update\n                           :support-filter re/support-filter\n                           :terminate? re/terminate?\n                           :decluster re/decluster\n                           :context-path-filter-fn re/context-path-filter)\n\n                    (re/bootstrap)\n                    (doall))]\n    (assoc results :metrics (calc-metrics results)\n                   #_:plot #_(plot-metrics results\n                                           {:save {:file (-&gt;&gt; results\n                                                              (re/re-params)\n                                                              (format \&quot;metrics-%s.svg\&quot;)\n                                                              (io/file results-dir))}}))))&quot;, :offset 1225, :ns &quot;edu.ucdenver.ccp.nlp.evaluation&quot;} {:command &quot;(def results (-&gt; prepared-model\n                   (assoc :context-path-length-cap 100\n                          :context-thresh 0.95\n                          :cluster-thresh 0.95\n                          :min-match-support 0\n                          :max-iterations 100\n                          :max-matches 3000\n                          :re-clustering? true)\n                   (evaluation/run-model results-dir)))&quot;, :offset 421, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn log-current-values\n  [{:keys [properties samples] :as model}]\n  (let [p1 (-&gt;&gt; [:patterns :new-matches :matches :patterns]\n                (map #(find model %))\n                (into {})\n                (util/map-kv #(-&gt;&gt; %\n                                   (group-by :predicted)\n                                   (util/map-kv count))))]\n    (-&gt;&gt; properties\n         (map (fn [property]\n                (assoc (util/map-kv #(get % property) p1)\n                  :property property\n                  :samples (count samples))))\n         (incanter/to-dataset)\n         (log/info))))&quot;, :offset 588, :ns &quot;edu.ucdenver.ccp.nlp.relation-extraction&quot;} {:command &quot;(count (:samples results))&quot;, :offset 26, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn bootstrap\n  [{:keys [seeds all-samples\n           terminate? context-match-fn pattern-update-fn\n           context-path-filter-fn\n           support-filter decluster]\n\n    :as   model}]\n  (log-starting-values model)\n  (loop [model (assoc model :patterns #{}\n                            :matches #{}\n                            :new-matches (set seeds)\n                            :samples (context-path-filter-fn model all-samples)\n                            :iteration 0)]\n    (let [model (update model :patterns (fn [patterns] (pattern-update-fn model patterns)))\n          unclustered (decluster model)\n          model (update model :patterns (fn [patterns] (filter (fn [pattern] (support-filter model pattern)) patterns)))\n          model (assoc model :new-matches (context-match-fn model))\n          model (update model :samples (fn [samples] (let [new-matches (:new-matches model)]\n                                                       (if (seq new-matches)\n                                                         (remove :predicted new-matches)\n                                                         samples))))\n          model (update model :new-matches (fn [new-matches] (filter :predicted new-matches)))\n          model (update model :matches (fn [matches] (-&gt;&gt; model\n                                                          :new-matches\n                                                          (into matches))))]\n      (if-let [results (terminate? model)]\n        results\n        (do\n          (log-current-values model)\n          (let [model (update model :iteration inc)\n                model (update model :new-matches (fn [new-matches] (-&gt;&gt; new-matches\n                                                                        (cap-nones)\n                                                                        (lazy-cat unclustered))))]\n            (recur model)))))))&quot;, :offset 1895, :ns &quot;edu.ucdenver.ccp.nlp.relation-extraction&quot;} {:command &quot;(def results (-&gt; prepared-model\n                 (assoc :context-path-length-cap 100\n                        :context-thresh 0.95\n                        :cluster-thresh 0.95\n                        :min-match-support 0\n                        :max-iterations 100\n                        :max-matches 3000\n                        :re-clustering? true)\n                 (evaluation/run-model results-dir)))&quot;, :offset 405, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(incanter/view (:plot results))&quot;, :offset 31, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def results (-&gt; prepared-model\n                 (assoc :context-path-length-cap 100\n                        :context-thresh 0.95\n                        :cluster-thresh 0.95\n                        :min-match-support 0\n                        :max-iterations 100\n                        :max-matches 3000\n                        :re-clustering? true)\n                 (evaluation/run-model results-dir)))\n(incanter/view (:plot results))&quot;, :offset 437, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def training-model-with-props (update training-model-with-props\n                                       :sentences (fn [sentences]\n                                                    (map #(re-model/map-&gt;Sentence %) sentences))))&quot;, :offset 229, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def prepared-model (-&gt; training-model-with-props\n                        (assoc :seed-frac 0.2\n                               :rng 0.022894)\n                        (re-model/split-train-test)))\n\n#_(def prepared-model (re-model/test-train testing-model-with-props prepared-model))\n\n\n(def results (-&gt; prepared-model\n                 (assoc :context-path-length-cap 100\n                        :context-thresh 0.95\n                        :cluster-thresh 0.95\n                        :min-match-support 0\n                        :max-iterations 100\n                        :max-matches 3000\n                        :re-clustering? true)\n                 (evaluation/run-model results-dir)))\n(incanter/view (:plot results))&quot;, :offset 721, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(:a #{:a :b :c})&quot;, :offset 4, :ns &quot;user&quot;} {:command &quot;(log/info \&quot;Training Model\\n\&quot;\n          (incanter-counts-dataset re-model/model-params (re-model/model-params training-model-with-props))\n          \&quot;Num sentences:\&quot; (count (:sentences training-model-with-props))\n          \&quot;Num sentences with property\\n\&quot;\n          #_(let [p1 (-&gt;&gt; training-model-with-props\n                          :sentences\n                          (group-by :property)\n                          (util/map-kv count))]\n              (-&gt;&gt; properties\n                   (map (fn [property]\n                          (assoc (util/map-kv #(get % property) p1)\n                            :property property)))\n                   (incanter/to-dataset))))&quot;, :offset 667, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn incanter-counts-dataset\n  [params m]\n  (let [m (util/map-kv count m)]\n    m\n    #_(-&gt;&gt; params\n           (keys)\n           (map (fn [p]\n                  (assoc (util/map-kv #(get % p) m)\n                    (p params) p)))\n           (incanter/to-dataset))))&quot;, :offset 265, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(log/info \&quot;Training Model\\n\&quot;\n          (incanter-counts-dataset re-model/MODEL-KEYs (re-model/model-params training-model-with-props))\n          \&quot;Num sentences:\&quot; (count (:sentences training-model-with-props))\n          \&quot;Num sentences with property\\n\&quot;\n          #_(let [p1 (-&gt;&gt; training-model-with-props\n                          :sentences\n                          (group-by :property)\n                          (util/map-kv count))]\n              (-&gt;&gt; properties\n                   (map (fn [property]\n                          (assoc (util/map-kv #(get % property) p1)\n                            :property property)))\n                   (incanter/to-dataset))))&quot;, :offset 665, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn incanter-counts-dataset\n  [params m]\n  (let [m (util/map-kv count m)]\n    (-&gt;&gt; params\n         #_(keys)\n         #_(map (fn [p]\n                  (assoc (util/map-kv #(get % p) m)\n                    (p params) p)))\n         (incanter/to-dataset))))&quot;, :offset 255, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn incanter-counts-dataset\n  [params m]\n  (let [m (util/map-kv count m)]\n    (-&gt;&gt; params\n         (map)\n         (keys)\n         #_(map (fn [p]\n                  (assoc (util/map-kv #(get % p) m)\n                    (p params) p)))\n         (incanter/to-dataset))))&quot;, :offset 268, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(log/info \&quot;Training Model\\n\&quot;\n          (incanter-counts-dataset re-model/MODEL-KEYs (re-model/model-params training-model-with-props)))&quot;, :offset 135, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(map re-model/MODEL-KEYs)&quot;, :offset 25, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(hash-map re-model/MODEL-KEYs)&quot;, :offset 30, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn incanter-counts-dataset\n  [params m]\n  (let [m (util/map-kv count m)]\n    (-&gt;&gt; params\n         (keys)\n         (map (fn [p]\n                (assoc (util/map-kv #(get % p) m)\n                  (p params) p)))\n         #_(incanter/to-dataset))))&quot;, :offset 249, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn incanter-counts-dataset\n  [params m]\n  (let [m (util/map-kv count m)]\n    (-&gt;&gt; params\n         (keys)\n         (map (fn [p]\n                (assoc (util/map-kv #(get % p) m)\n                  (p params) p)))\n         (incanter/to-dataset))))&quot;, :offset 247, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn incanter-counts-dataset\n  [params m]\n  (let [m (util/map-kv count m)]\n    (-&gt;&gt; params\n         (keys)\n         (map (fn [p]\n                (-&gt; (util/map-kv #(get % p) m)\n                    (assoc (p params) p))))\n         (incanter/to-dataset))))&quot;, :offset 254, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn incanter-counts-dataset\n  [params m]\n  (let [m (util/map-kv count m)]\n    (-&gt;&gt; params\n         (keys)\n         (map (fn [p]\n                (-&gt; (util/map-kv #(get % p) m)\n                    #_(assoc (p params) p))))\n         (incanter/to-dataset))))&quot;, :offset 256, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn incanter-counts-dataset\n  [params m]\n  (let [m (util/map-kv count m)]\n    (-&gt;&gt; params\n         (keys)\n         (map (fn [p]\n                (-&gt; (util/map-kv #(get % p) m)\n                    #_(assoc (p params) p))))\n         (incanter/to-dataset))\n    m))&quot;, :offset 262, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn incanter-counts-dataset\n  [params m]\n  (let [m (util/map-kv count m)]\n    (-&gt;&gt; params\n         (keys)\n         (map (fn [p]\n                (-&gt; (util/map-kv #(get % p) m)\n                    #_(assoc (p params) p))))\n         (incanter/to-dataset))\n    (incanter/to-dataset m)))&quot;, :offset 284, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(log/info \&quot;Training Model\\n\&quot;\n          (incanter-counts-dataset (zipmap re-model/MODEL-KEYs\n                                           re-model/MODEL-KEYs) \n                                   (re-model/model-params training-model-with-props)))&quot;, :offset 243, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn incanter-counts-dataset\n  [params m]\n  (let [m (util/map-kv count m)]\n    (-&gt;&gt; params\n         (keys)\n         (map (fn [p]\n                (-&gt; (util/map-kv #(get % p) m)\n                    #_(assoc (p params) p))))\n         (incanter/to-dataset))\n    (incanter/to-dataset  {:concept-annotations 25752, :concept-graphs 6437, :structure-annotations 271288, :structure-graphs 10365})))&quot;, :offset 390, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn incanter-counts-dataset\n  [params m]\n  (let [m (util/map-kv count m)]\n    #_(-&gt;&gt; params\n           (keys)\n           (map (fn [p]\n                  (-&gt; (util/map-kv #(get % p) m)\n                      #_(assoc (p params) p))))\n           (incanter/to-dataset))\n    (incanter/to-dataset  {:concept-annotations 25752, :concept-graphs 6437, :structure-annotations 271288, :structure-graphs 10365})))&quot;, :offset 402, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(defn incanter-counts-dataset\n  [params m]\n  (let [m (util/map-kv count m)]\n    #_(-&gt;&gt; params\n           (keys)\n           (map (fn [p]\n                  (-&gt; (util/map-kv #(get % p) m)\n                      #_(assoc (p params) p))))\n           (incanter/to-dataset))\n    (incanter/to-dataset  {\&quot;a\&quot; 1 \&quot;b\&quot; 2 \&quot;c\&quot; 3})))&quot;, :offset 315, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(log/info \&quot;Training Model\\n\&quot;\n          (incanter-counts-dataset (zipmap re-model/MODEL-KEYs\n                                           re-model/MODEL-KEYs)\n                                   (re-model/model-params training-model-with-props)))&quot;, :offset 242, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(incanter/to-dataset  {\&quot;a\&quot; 1 \&quot;b\&quot; 2 \&quot;c\&quot; 3})&quot;, :offset 42, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(log/info \&quot;Training Model\\n\&quot;\n          (incanter/to-dataset [(util/map-kv count (re-model/model-params training-model-with-props))\n                                (util/map-kv count (re-model/model-params testing-model-with-props))]))&quot;, :offset 234, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def testing-model (re-model/make-model testing-knowtator-view factory word2vec-db))\n(def testing-model-with-sentences (assoc testing-model :sentences (re-model/make-sentences testing-model)))\n(def testing-model-with-props (assoc testing-model-with-sentences :properties properties))&quot;, :offset 283, :ns &quot;scripts.bio-creative-relation-extraction&quot;} {:command &quot;(def testing-knowtator-view (k/view testing-dir))&quot;, :offset 49, :ns &quot;scripts.bio-creative-relation-extraction&quot;}]}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Clojure REPL.Tantor REPL">
    <configuration name="Connect to Tantor" type="BashConfigurationType" factoryName="Bash">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="INTERPRETER_PATH" value="/bin/bash" />
      <option name="PROJECT_INTERPRETER" value="false" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/run/run_on_tantor.sh" />
      <option name="PARAMETERS" value="" />
      <module name="" />
      <method v="2" />
    </configuration>
    <configuration name="PITCHME" type="BashConfigurationType" factoryName="Bash">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="INTERPRETER_PATH" value="/bin/bash" />
      <option name="PROJECT_INTERPRETER" value="false" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/run/run_pitchme.sh" />
      <option name="PARAMETERS" value="" />
      <module name="" />
      <method v="2" />
    </configuration>
    <configuration name="REBL" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="Dep2Rel" />
      <setting name="replType" value="CLOJURE_MAIN" />
      <setting name="execution" value="DEPS" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="rebl" />
      <method v="2" />
    </configuration>
    <configuration name="REPL for Dep2Rel" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false" temporary="true">
      <module name="Dep2Rel" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="DEPS" />
      <setting name="jvmArgs" value="-Xmx14g" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Tantor REPL 2" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <module name="Dep2Rel" />
      <setting name="host" value="127.0.0.1" />
      <setting name="port" value="41429" />
      <setting name="replType" value="0" />
      <method v="2" />
    </configuration>
    <configuration name="Tantor REPL" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false" singleton="true">
      <module name="Dep2Rel" />
      <setting name="host" value="127.0.0.1" />
      <setting name="port" value="41425" />
      <setting name="replType" value="0" />
      <method v="2">
        <option name="RunConfigurationTask" enabled="true" run_configuration_name="Connect to Tantor" run_configuration_type="BashConfigurationType" />
      </method>
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="0" />
      <module name="" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Bash.PITCHME" />
      <item itemvalue="Bash.Connect to Tantor" />
      <item itemvalue="Clojure REPL.REBL" />
      <item itemvalue="Clojure REPL.Tantor REPL" />
      <item itemvalue="Clojure REPL.Tantor REPL 2" />
      <item itemvalue="Clojure REPL.REPL for Dep2Rel" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure REPL.REPL for Dep2Rel" />
        <item itemvalue="Clojure REPL.REPL for Dep2Rel" />
      </list>
    </recent_temporary>
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="1599" y="29" width="1682" height="1022" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info auto_hide="true" content_ui="combo" id="Project" order="0" sideWeight="0.4988938" type="SLIDING" weight="0.1916972" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Designer" order="2" />
      <window_info id="UI Designer" order="3" />
      <window_info id="Favorites" order="4" sideWeight="0.5011062" side_tool="true" weight="0.1898657" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" weight="0.32853982" />
      <window_info anchor="bottom" id="Run" order="2" sideWeight="0.4993895" weight="0.32743362" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.32964602" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" weight="0.32964602" />
      <window_info anchor="bottom" id="FindBugs-IDEA" order="7" weight="0.32964602" />
      <window_info anchor="bottom" id="Version Control" order="8" sideWeight="0.4993895" weight="0.36283186" />
      <window_info anchor="bottom" id="Build" order="9" weight="0.26327434" />
      <window_info anchor="bottom" id="Docker" order="10" show_stripe_button="false" />
      <window_info anchor="bottom" id="CheckStyle" order="11" weight="0.32964602" />
      <window_info anchor="bottom" id="Event Log" order="12" sideWeight="0.50061053" side_tool="true" weight="0.36283186" />
      <window_info anchor="bottom" id="Database Changes" order="13" />
      <window_info anchor="bottom" id="Run with VisualVM" order="14" />
      <window_info anchor="bottom" id="Debug with VisualVM" order="15" />
      <window_info anchor="bottom" auto_hide="true" x="768" y="420" width="832" height="900" id="Terminal" order="16" sideWeight="0.4993895" type="FLOATING" weight="0.30641592" />
      <window_info anchor="bottom" id="Messages" order="17" weight="0.32743362" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Maven" order="3" />
      <window_info anchor="right" id="Palette" order="4" />
      <window_info anchor="right" id="Google Cloud Storage" order="5" show_stripe_button="false" />
      <window_info anchor="right" id="SciView" order="6" />
      <window_info anchor="right" id="Database" order="7" show_stripe_button="false" />
      <window_info anchor="right" id="Leiningen" order="8" />
      <window_info anchor="right" id="Palette&#9;" order="9" />
      <window_info anchor="right" auto_hide="true" id="Clojure Deps" order="10" sideWeight="0.48990825" weight="0.2002442" />
      <window_info active="true" anchor="right" x="0" y="442" width="1600" height="878" id="REPL" order="11" sideWeight="0.5100917" side_tool="true" type="WINDOWED" visible="true" weight="0.43772894" />
      <window_info anchor="right" x="0" y="0" width="350" height="694" id="Documentation" order="12" side_tool="true" weight="0.32967034" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="1">
          <value>
            <State>
              <option name="RECENTLY_FILTERED_USER_GROUPS">
                <collection />
              </option>
              <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
                <collection />
              </option>
              <option name="COLUMN_ORDER">
                <list>
                  <option value="0" />
                  <option value="1" />
                  <option value="2" />
                  <option value="3" />
                </list>
              </option>
            </State>
          </value>
        </entry>
        <entry key="MAIN">
          <value>
            <State>
              <option name="RECENTLY_FILTERED_USER_GROUPS">
                <collection />
              </option>
              <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
                <collection />
              </option>
              <option name="COLUMN_ORDER">
                <list>
                  <option value="0" />
                  <option value="2" />
                  <option value="1" />
                  <option value="3" />
                </list>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="RECENT_FILTERS">
      <map>
        <entry key="Branch">
          <value>
            <list />
          </value>
        </entry>
        <entry key="User">
          <value>
            <list />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Clustering info" />
    <MESSAGE value="Made all properties PCA plots" />
    <MESSAGE value="Fixed running model with supplied split" />
    <MESSAGE value="Fixed clustering param order" />
    <MESSAGE value="Support filter used in for declustering and filtering so needed to be generalized" />
    <MESSAGE value="Pass model as param to support-filter in decluster" />
    <MESSAGE value="Show property in update log" />
    <MESSAGE value="Use model for iterations of bootstrapping" />
    <MESSAGE value="supply 0 as init to num none cap" />
    <MESSAGE value="Collapse toks in concept annotations along dep path" />
    <MESSAGE value="unless it becomes an issue again, removing too many matches termination condition" />
    <MESSAGE value="Need to use all-samples instead of samples" />
    <MESSAGE value="Differentiate between db not set error and word not found error" />
    <MESSAGE value="Found out about max-key fn" />
    <MESSAGE value="Calc metrics before plotting" />
    <MESSAGE value="Handle new exceptions from word2vec" />
    <MESSAGE value="Don't remove samples if no new matches were found" />
    <MESSAGE value="Wait until sentences are made to cache word-vec" />
    <MESSAGE value="Remove parens from context path to shorten length" />
    <MESSAGE value="Made plots context path lengths" />
    <MESSAGE value="Removed presentation resources" />
    <MESSAGE value="Make a pca plot with all properties" />
    <MESSAGE value="Improved logging when reading in model" />
    <MESSAGE value="Plots with specific names" />
    <MESSAGE value="Fixed logging model info" />
    <option name="LAST_COMMIT_MESSAGE" value="Fixed logging model info" />
  </component>
  <component name="debuggerHistoryManager">
    <expressions id="evaluateCodeFragment">
      <expression>
        <expression-string>(-&gt;&gt; entities
                                              (map :concept)
                                              (map set))</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(-&gt;&gt; entities
                                              (map :concept)
                                              seq)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(-&gt;&gt; entities
                                              (map :concept)
                                              (map set)
     seq)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(get s :entities)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(= &quot;CRAFT_aggregate_ontology_Instance_21741&quot; (:id e))</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(key-fn (first collection))</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(first collection)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(first (:graphSpaces doc))</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(-&gt;&gt; model
     :concept-graphs
     vals
     seq)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
    </expressions>
    <expressions id="breakpointCondition">
      <expression>
        <expression-string>(= (:id graph-space) &quot;Sentence 243&quot;)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(= (:id triple) &quot;4&quot;)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(= target &quot;11532192-23988&quot;)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(nil? context)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(nil? sent)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(not (or e1 e2))</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
    </expressions>
    <expressions id="evaluateExpression">
      <expression>
        <expression-string>(-&gt; annotation
                                 :spans
                                 first
                                 :text)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(seq annotation)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(doall annotation)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(doseq annotation)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>annotation</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(simple-concep (:conceptAnnotation (bean (:source triple))))</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(:conceptAnnotation (bean (:source triple)))</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(bean (:source triple))</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(:source triple)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>(bean triple)</expression-string>
        <language-id>Clojure</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
    </expressions>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$USER_HOME$/.gitlibs/libs/github-tuh8888/hpl-utl/a036390c6a2e6ba86de07bb3eff690992817617a/src/math.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="655">
          <caret line="73" column="6" selection-start-line="73" selection-start-column="6" selection-end-line="73" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.10.1-beta2/clojure-1.10.1-beta2.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="325">
          <caret line="7279" column="32" selection-start-line="7279" selection-start-column="32" selection-end-line="7279" selection-end-column="32" />
        </state>
      </provider>
    </entry>
    <entry file="jar:///opt/graalvm/src.zip!/java/util/Collections.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="184">
          <caret line="427" column="25" selection-start-line="427" selection-start-column="19" selection-end-line="427" selection-end-column="25" />
        </state>
      </provider>
    </entry>
    <entry file="jar:///opt/graalvm/src.zip!/java/util/Collection.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="259">
          <caret line="146" column="7" lean-forward="true" selection-start-line="146" selection-start-column="7" selection-end-line="146" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../hpl-util/deps.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="110">
          <caret line="5" column="42" selection-start-line="5" selection-start-column="42" selection-end-line="5" selection-end-column="42" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/edu/ucdenver/ccp/conll.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-924" />
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/scripts/relation_extraction_script.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="110">
          <caret line="5" column="51" selection-start-line="5" selection-start-column="51" selection-end-line="5" selection-end-column="51" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/scripts/examples.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="440">
          <caret line="20" column="61" selection-start-line="20" selection-start-column="61" selection-end-line="20" selection-end-column="61" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$PROJECT_DIR$/lib/knowtator-2.1.6.jar!/edu/ucdenver/ccp/knowtator/view/KnowtatorView.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="273">
          <caret line="246" column="10" selection-start-line="246" selection-start-column="8" selection-end-line="246" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/edu/ucdenver/ccp/knowtator_clj.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="535">
          <caret line="30" column="46" selection-start-line="30" selection-start-column="46" selection-end-line="30" selection-end-column="46" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../hpl-util/target/math.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="193">
          <caret line="19" column="6" selection-start-line="19" selection-start-column="6" selection-end-line="19" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../hpl-util/target/uncomplicate/neanderthal/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="193">
          <caret line="260" selection-start-line="260" selection-end-line="260" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../hpl-util/target/uncomplicate/neanderthal/internal/host/buffer_block.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="193">
          <caret line="2219" selection-start-line="2219" selection-end-line="2219" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/.gitlibs/libs/github-tuh8888/hpl-utl/78ad5ebd65aeff113410c6112bc1ec4c545d7f9d/src/linear_algebra.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="447">
          <caret line="82" column="13" lean-forward="true" selection-start-line="82" selection-start-column="13" selection-end-line="82" selection-end-column="13" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/.gitlibs/libs/github-tuh8888/hpl-utl/6982794c5919a5f2248ec87e3f72f08d21518e4e/src/math.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="193">
          <caret line="49" column="6" selection-start-line="49" selection-start-column="6" selection-end-line="49" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../hpl-util/src/math.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="858">
          <caret line="51" column="27" selection-start-line="51" selection-start-column="27" selection-end-line="51" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.gitignore">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="154">
          <caret line="8" column="10" lean-forward="true" selection-start-line="8" selection-start-column="10" selection-end-line="8" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/run/run_pitchme.sh">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="44">
          <caret line="2" column="23" lean-forward="true" selection-start-line="2" selection-start-column="23" selection-end-line="2" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/run/run_on_tantor.sh">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="44">
          <caret line="2" column="55" selection-start-line="2" selection-start-column="55" selection-end-line="2" selection-end-column="55" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/assets/metrics.svg">
      <provider selected="true" editor-type-id="images" />
    </entry>
    <entry file="file://$PROJECT_DIR$/assets/PITCHME.css">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="286">
          <caret line="13" column="16" selection-start-line="13" selection-start-column="16" selection-end-line="13" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.attach_pid8189">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/../hpl-util/target/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="291">
          <caret line="7021" selection-start-line="7021" selection-end-line="7021" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/.gitlibs/libs/github-tuh8888/hpl-utl/101b1b52beb68ad4ee3c62a5ed8d68fec6f4f719/src/util.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="212">
          <caret line="59" column="6" selection-start-line="59" selection-start-column="6" selection-end-line="59" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/com/google/inject/guice/4.0/guice-4.0.jar!/com/google/inject/internal/cglib/core/$CodeGenerationException.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="88">
          <caret line="7" column="13" selection-start-line="7" selection-start-column="13" selection-end-line="7" selection-end-column="13" />
        </state>
      </provider>
    </entry>
    <entry file="jar:///opt/graalvm/src.zip!/java/lang/Exception.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="212">
          <caret line="44" column="13" selection-start-line="44" selection-start-column="13" selection-end-line="44" selection-end-column="13" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/uncomplicate_context_alg.clj" />
    <entry file="file://$PROJECT_DIR$/../Word2Vec-clj/deps.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="88">
          <caret line="4" column="82" selection-start-line="4" selection-start-column="82" selection-end-line="4" selection-end-column="82" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/.gitlibs/libs/github-tuh8888/Word2Vec-clj/a9ccf752bc5ff1231a0cbbcfe945eabe439d40d4/src/word2vec.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="193">
          <caret line="40" column="6" selection-start-line="40" selection-start-column="6" selection-end-line="40" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/net/mikera/core.matrix/0.52.0/core.matrix-0.52.0.jar!/clojure/core/matrix/dataset.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-88">
          <caret line="23" column="6" selection-start-line="23" selection-start-column="6" selection-end-line="23" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/incanter/incanter-core/1.9.3/incanter-core-1.9.3.jar!/incanter/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-22">
          <caret line="38" column="48" selection-start-line="38" selection-start-column="48" selection-end-line="38" selection-end-column="48" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/incanter/incanter-io/1.9.3/incanter-io-1.9.3.jar!/incanter/datasets.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="255">
          <caret line="20" column="37" selection-start-line="20" selection-start-column="37" selection-end-line="20" selection-end-column="37" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/incanter/incanter-io/1.9.3/incanter-io-1.9.3.jar!/incanter/io.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="182">
          <caret line="203" column="7" lean-forward="true" selection-start-line="203" selection-start-column="7" selection-end-line="203" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="jar:///opt/graalvm/src.zip!/java/io/File.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-2288">
          <caret line="148" column="13" selection-start-line="148" selection-start-column="13" selection-end-line="148" selection-end-column="13" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../Word2Vec-clj/src/Word2VecNotSet.java" />
    <entry file="file://$PROJECT_DIR$/../Word2Vec-clj/src/Word2VecNotSet.clj" />
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="109736">
          <caret line="4988" column="6" selection-start-line="4988" selection-start-column="6" selection-end-line="4988" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/deps.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="374">
          <caret line="17" selection-start-line="17" selection-end-line="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/PITCHME.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor relative-caret-position="1100">
            <caret line="50" column="52" selection-start-line="50" selection-start-column="52" selection-end-line="50" selection-end-column="52" />
          </first_editor>
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../Word2Vec-clj/src/word2vec.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="479">
          <caret line="57" column="21" selection-start-line="57" selection-start-column="21" selection-end-line="57" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/edu/ucdenver/ccp/nlp/readers.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="425">
          <caret line="149" column="33" selection-start-line="149" selection-start-column="33" selection-end-line="149" selection-end-column="33" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/edu/ucdenver/ccp/nlp/re_model.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="182">
          <caret line="82" selection-start-line="82" selection-end-line="82" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/.gitlibs/libs/github-tuh8888/hpl-utl/b3a4a2eacc14d32386ce389845eba897615388ac/src/cluster_tools.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="336">
          <caret line="39" column="62" lean-forward="true" selection-start-line="39" selection-start-column="62" selection-end-line="39" selection-end-column="62" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../hpl-util/target/cluster_tools.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="415">
          <caret line="31" selection-start-line="31" selection-end-line="31" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../hpl-util/src/util.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="110">
          <caret line="5" column="36" selection-start-line="5" selection-start-column="36" selection-end-line="5" selection-end-column="36" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../hpl-util/src/linear_algebra.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="393">
          <caret line="50" column="30" selection-start-line="50" selection-start-column="30" selection-end-line="50" selection-end-column="30" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/edu/ucdenver/ccp/nlp/evaluation.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="314">
          <caret line="210" column="62" selection-start-line="210" selection-start-column="62" selection-end-line="210" selection-end-column="62" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/edu/ucdenver/ccp/nlp/relation_extraction.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="864">
          <caret line="155" column="38" lean-forward="true" selection-start-line="155" selection-start-column="38" selection-end-line="155" selection-end-column="38" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../hpl-util/src/cluster_tools.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="374">
          <caret line="26" column="25" lean-forward="true" selection-start-line="26" selection-start-column="25" selection-end-line="26" selection-end-column="25" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/scripts/bio_creative_relation_extraction.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="198">
          <caret line="106" column="28" selection-start-line="106" selection-start-column="28" selection-end-line="106" selection-end-column="28" />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>No facets are configured</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>Python 3.7 (Dep2Rel)</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>Word2Vec-clj</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Deps: aopalliance:1.0</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>